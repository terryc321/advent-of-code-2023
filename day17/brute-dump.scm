#|

brute foroce breadth first search - how much hard drive space is required ?

what is sufficient information to recreate the path taken ?

assuming coding is correct it should be a simple case to let computer run

first try just a simple s expression outputs to file

if program gets too large the process gets killed ...

since on files , we can re- run the program , if something goes wrong can we restart the computation ?
check points ?
verification ?

general state

id      : so know what state talking about
id-from : what state did this state come from ... bread crumb 
state = (id id-from x y cost-so-far dir dir dir)

multiple threads each generating a set of next states 

|#



(import scheme)
(import simple-exceptions)
(import (chicken repl))
(import (chicken string))
(import (chicken pretty-print))
(import (chicken io))
(import (chicken format))
(import (chicken sort))
(import (chicken file))
(import (chicken process-context))
;; (change-directory "day17")
;; (get-current-directory)
(import procedural-macros)
(import regex)
(import simple-md5)
(import simple-loops)
(import srfi-69)
;; hash-table-ref  hash key thunk
;; hash-table-set! hash key val
;; sudo chicken-install srfi-178
(import srfi-178)
;; srfi-178 provides bit-vectors
;; (import-for-syntax
;;   (only checks <<)
;;   (only bindings bind bind-case)
;;   (only procedural-macros macro-rules with-renamed-symbols once-only))
(import sequences)
(import srfi-1)
(import matchable)
(define pp pretty-print)

;;--------------------------------------
(define *vec*
#(
#(1 3 2 4 2 2 3 2 4 3 3 4 4 3 4 2 2 4 3 2 4 2 3 2 2 3 5 3 3 2 3 3 4 5 1 2 2 4 5 2 3 2 3 1 4 5 5 4 1 1 4 2 2 2 2 3 6 5 2 6 6 5 5 6 3 4 3 6 5 4 3 5 4 5 3 5 4 2 6 4 3 4 2 4 2 3 6 5 4 4 6 6 4 1 5 4 3 3 4 1 1 2 5 5 5 1 5 2 5 3 1 1 1 2 1 2 4 3 5 3 3 4 3 1 3 2 4 2 4 3 2 3 3 2 4 3 3 2 2 2 2 )
#(3 3 4 2 3 2 4 2 2 4 2 1 3 2 4 1 1 3 1 2 4 3 3 4 4 1 4 4 3 4 1 1 5 2 4 5 4 3 5 4 4 2 4 4 3 5 1 6 5 6 4 3 3 3 4 6 6 6 5 2 6 2 2 6 5 5 2 6 6 2 5 5 5 4 5 3 4 4 5 3 6 2 5 5 2 3 3 3 3 6 6 5 3 6 4 6 5 5 1 1 3 1 5 1 2 3 2 3 1 1 4 2 1 5 1 3 1 4 3 4 4 3 1 1 1 1 3 3 1 4 2 2 3 4 1 2 4 1 1 2 1 )
#(2 4 2 2 2 2 2 2 1 3 1 3 1 2 2 3 4 2 2 2 5 5 4 1 1 3 3 5 4 4 1 1 2 3 3 5 5 1 2 4 5 5 3 5 2 5 2 2 5 3 4 2 3 2 6 5 4 5 6 5 6 6 2 5 4 6 5 3 4 2 3 5 3 4 3 4 5 5 5 6 2 4 5 3 6 6 4 3 6 3 6 2 5 5 3 4 6 2 4 5 1 2 5 1 1 1 2 5 4 2 2 2 4 5 2 1 2 4 4 5 1 5 3 5 2 1 3 3 1 4 2 2 1 3 4 2 2 4 4 2 3 )
#(4 1 4 4 4 4 3 3 2 4 1 2 3 3 4 4 1 4 1 4 5 1 2 1 5 1 4 3 5 4 5 3 3 3 3 3 1 3 5 3 2 5 2 2 5 6 2 6 5 4 4 6 5 6 3 3 3 3 6 4 6 5 5 5 3 3 2 5 2 6 2 3 4 6 6 3 2 4 2 3 5 4 3 2 5 6 4 2 3 6 6 5 3 3 4 3 4 3 2 5 5 2 2 1 2 2 1 4 1 2 2 1 1 3 4 4 4 1 1 2 1 2 4 2 1 4 2 3 2 1 1 2 2 4 2 2 2 4 1 3 1 )
#(4 3 1 3 2 1 3 1 3 3 4 3 3 1 3 3 2 2 4 3 2 3 2 5 1 1 5 1 4 4 2 5 3 5 2 5 5 3 3 1 2 5 5 4 2 4 4 6 4 5 6 2 4 4 6 6 2 2 2 3 5 3 6 2 2 2 6 3 6 4 2 3 2 3 4 2 4 4 2 4 2 6 4 3 3 3 4 4 6 3 2 3 4 5 3 2 2 6 5 2 2 5 4 3 2 1 5 1 5 2 3 1 2 2 1 1 5 2 4 2 2 1 3 2 3 5 3 2 3 2 4 3 3 3 1 2 4 4 1 4 2 )
#(3 1 4 1 2 1 1 2 1 3 3 1 4 4 1 1 3 3 1 1 4 1 3 3 4 3 4 3 4 5 2 1 2 4 3 1 2 1 3 4 4 2 3 2 4 2 5 4 5 2 3 6 3 4 5 6 6 5 4 2 3 6 6 3 3 2 4 6 5 4 5 6 4 5 2 5 2 4 6 2 2 6 3 4 3 2 6 4 2 6 5 4 4 5 2 6 4 4 2 5 6 5 5 5 6 1 5 4 2 4 3 1 5 5 5 1 1 2 3 3 3 3 3 4 4 2 4 3 4 2 1 3 2 4 1 2 1 4 3 3 4 )
#(4 2 3 4 1 4 1 1 2 2 3 3 3 4 1 5 1 3 4 4 5 5 1 4 1 4 1 5 1 1 2 1 5 4 2 4 2 2 3 4 3 2 3 6 5 2 5 3 4 6 4 2 5 6 3 6 2 6 4 6 2 4 6 3 6 5 3 5 2 6 4 3 6 3 3 4 3 3 2 5 6 6 2 6 2 4 6 3 6 6 5 3 3 6 4 3 6 6 6 5 2 5 5 6 6 6 3 1 5 3 1 4 4 5 3 5 5 4 4 5 5 5 3 2 1 4 1 2 2 3 2 4 2 4 3 2 3 3 3 4 2 )
#(1 2 1 1 2 3 1 1 4 2 1 4 1 1 5 3 4 5 3 2 4 1 2 5 2 5 2 1 2 3 3 2 4 4 6 5 2 6 3 5 3 2 5 2 3 5 3 4 3 3 4 6 5 5 5 4 2 3 4 2 3 3 6 2 3 2 5 2 2 4 5 6 4 4 2 6 5 6 6 6 3 5 6 6 6 5 2 6 5 4 3 2 4 5 2 5 2 4 5 6 2 2 2 2 6 2 2 3 4 1 3 2 3 5 5 3 1 5 2 4 1 1 1 1 4 3 2 1 1 3 1 4 2 3 1 4 1 4 2 3 1 )
#(2 1 2 3 2 3 2 1 1 2 4 3 5 5 5 2 2 3 3 2 5 3 3 3 3 5 1 3 1 2 2 5 6 2 2 6 5 5 5 5 3 6 2 2 2 6 2 5 6 2 5 2 6 2 4 2 2 3 6 2 3 3 6 6 5 5 4 2 3 2 4 4 5 2 5 4 3 3 5 5 5 4 3 2 3 4 3 5 6 5 5 2 3 3 4 2 4 2 4 6 2 4 3 3 5 3 5 6 4 6 5 4 1 5 5 3 1 4 3 2 4 5 1 5 3 1 1 2 4 3 1 2 4 4 3 4 2 2 3 4 4 )
#(4 2 4 2 3 3 3 3 4 2 2 2 2 3 3 2 1 1 4 3 2 2 4 4 2 2 1 3 4 5 1 4 2 5 5 6 2 6 3 5 5 2 6 4 3 5 5 4 4 5 6 5 3 3 3 4 4 4 5 2 5 4 2 6 2 2 5 2 3 4 2 2 2 5 6 3 3 5 4 3 2 2 4 3 3 4 5 6 2 5 4 5 4 3 4 5 2 5 3 5 3 5 5 4 5 3 4 6 3 2 4 6 5 5 5 4 3 2 5 4 5 4 4 2 3 5 5 3 2 5 5 2 4 1 2 1 3 1 3 1 4 )
#(1 2 1 3 2 2 4 3 4 1 2 2 2 1 5 5 2 3 2 2 2 4 1 2 4 1 2 4 3 4 6 4 3 5 3 3 3 5 2 5 3 4 6 6 3 5 3 3 2 2 5 6 4 6 5 6 6 5 5 4 5 6 4 5 6 5 7 5 4 4 5 5 6 5 6 6 4 7 7 5 4 5 3 5 4 2 4 2 6 5 4 6 6 3 2 5 4 3 4 6 4 2 3 4 2 5 4 3 2 5 3 5 3 2 2 2 1 2 3 5 1 2 1 2 1 2 4 2 2 4 5 1 2 3 1 2 3 4 1 4 1 )
#(2 4 3 4 2 3 2 4 2 5 5 3 4 5 2 2 5 1 5 4 4 4 2 4 1 2 1 1 6 5 2 6 6 3 5 6 5 4 6 6 6 6 4 3 3 4 5 6 3 6 2 3 5 3 5 3 4 3 5 4 7 5 3 4 6 7 4 5 6 4 7 4 4 4 5 7 6 7 6 5 4 6 6 7 6 5 3 4 4 4 3 3 5 3 2 6 6 6 6 3 3 4 2 6 3 3 5 5 3 4 6 2 6 3 3 2 1 5 1 5 3 3 4 1 3 3 1 1 4 4 3 1 5 1 4 4 2 4 1 1 1 )
#(2 3 1 3 1 4 3 1 3 1 4 3 2 2 2 2 5 2 3 5 4 2 2 2 5 2 1 3 4 5 3 2 2 3 4 3 3 2 3 2 5 4 4 3 2 3 6 3 6 5 4 2 2 6 7 3 6 7 3 4 7 6 6 5 5 7 7 4 4 3 5 4 7 6 4 4 6 6 4 5 6 6 3 4 7 3 5 4 4 4 5 3 4 6 6 6 5 2 6 2 2 6 3 6 2 6 3 2 2 6 6 4 5 4 3 2 2 2 1 5 2 5 3 1 3 2 1 3 4 4 5 1 4 2 2 3 2 1 1 3 2 )
#(3 4 2 2 4 4 3 1 5 4 1 2 3 4 4 4 3 2 1 1 3 3 3 5 5 4 6 4 6 2 3 2 6 6 2 2 5 3 3 4 3 2 2 2 4 6 4 2 3 3 6 7 4 3 5 6 3 3 3 4 6 4 7 6 7 6 5 3 3 4 4 5 7 6 6 6 4 6 5 4 7 3 5 7 5 6 6 4 4 3 4 3 5 2 6 6 3 2 6 5 6 2 2 4 3 3 6 5 3 6 2 5 6 6 6 3 4 2 2 1 4 5 4 2 4 2 4 5 2 1 4 5 4 5 5 4 3 1 1 3 3 )
#(4 3 1 1 1 2 5 4 3 4 4 5 4 3 5 1 3 5 3 2 1 2 4 3 2 5 4 5 5 4 2 6 2 4 3 5 4 4 4 2 5 3 5 4 2 5 6 4 6 3 3 6 7 5 4 7 4 3 5 7 6 5 4 4 5 3 6 5 4 4 3 3 4 3 5 3 4 4 4 4 3 6 6 7 3 4 7 3 6 7 5 5 5 4 7 2 5 4 3 4 4 6 6 6 5 5 5 5 4 4 2 3 6 3 6 2 6 2 6 2 2 1 1 4 2 5 2 5 5 3 2 3 4 5 1 3 4 3 4 4 2 )
#(2 3 3 1 1 4 1 1 3 1 1 2 1 2 4 5 4 1 1 3 1 2 3 4 4 6 2 4 2 4 5 4 2 3 4 4 6 2 2 5 2 2 4 6 6 7 4 3 6 7 4 3 6 6 4 3 7 7 6 4 4 5 3 6 6 3 3 3 3 5 7 3 7 3 6 7 4 5 3 3 3 3 6 7 6 4 4 3 5 6 7 6 4 3 4 6 5 7 6 4 5 5 2 5 2 4 3 5 3 2 2 4 4 6 4 4 3 5 2 6 5 2 3 3 2 2 1 4 5 2 3 1 4 1 3 1 5 1 2 3 2 )
#(2 3 1 4 2 2 5 5 4 4 4 3 1 4 2 2 5 4 2 2 5 4 2 6 4 6 2 4 3 6 5 2 3 2 6 2 4 5 4 2 2 3 3 7 4 7 3 3 3 6 7 4 4 6 7 6 5 4 5 3 6 3 7 3 6 6 4 3 6 5 4 3 5 5 5 6 4 5 6 3 4 5 4 5 6 3 3 4 7 4 3 7 3 6 7 5 6 3 4 6 6 6 3 4 6 5 3 2 4 3 6 3 3 6 6 4 5 5 4 2 6 4 1 5 5 2 3 3 1 4 4 1 4 4 1 5 3 2 1 1 2 )
#(2 3 1 1 1 5 5 3 5 4 4 2 3 2 1 2 5 5 5 5 3 4 6 4 2 6 4 2 5 5 5 2 2 5 4 4 3 4 4 6 4 5 7 4 3 6 5 6 5 3 3 5 3 6 3 7 6 6 7 7 7 3 3 6 5 5 7 5 7 3 7 7 6 7 4 3 3 3 5 3 7 6 4 3 5 3 6 6 6 4 5 7 7 7 4 5 4 6 6 4 4 3 2 2 2 6 3 2 6 6 6 3 6 2 4 6 4 6 4 6 4 2 4 4 4 3 5 4 1 4 4 1 5 4 3 4 1 3 5 4 1 )
#(4 1 4 1 4 2 5 5 2 1 5 4 3 4 4 5 2 5 3 5 4 3 3 6 6 6 3 4 3 2 4 3 4 2 4 3 4 4 5 5 7 3 5 4 4 5 5 6 5 5 7 4 3 3 3 3 3 5 4 7 7 7 7 4 6 7 3 4 7 3 5 4 3 6 7 3 7 6 6 7 6 3 7 5 4 6 3 6 5 6 7 5 4 4 7 3 4 5 7 6 6 6 5 2 6 5 2 2 4 4 3 3 6 6 5 6 4 6 6 3 5 5 3 2 3 2 1 4 1 5 2 1 2 5 5 1 3 3 5 4 1 )
#(4 1 4 4 2 3 1 2 3 1 4 4 1 2 2 4 1 4 5 2 4 2 4 3 4 2 2 4 2 6 3 2 2 4 5 5 2 4 3 4 7 7 4 4 6 5 6 7 7 7 7 3 5 5 6 7 6 4 7 3 7 4 4 3 4 4 7 6 6 4 4 6 6 7 6 5 5 5 6 6 7 4 3 7 4 3 3 4 3 7 5 7 3 3 6 5 3 4 4 4 4 7 7 7 4 4 6 3 4 2 3 2 6 3 3 2 2 2 5 6 5 4 3 2 3 2 1 1 3 5 2 5 5 2 5 3 5 4 2 4 1 )
#(1 2 4 2 3 3 2 2 1 2 2 5 2 4 1 3 5 5 5 3 5 6 5 2 5 3 3 6 6 2 2 3 5 5 4 3 3 7 6 4 5 7 3 3 4 7 5 4 5 3 3 7 7 7 4 4 4 3 4 6 4 7 4 7 3 4 3 7 6 4 6 6 5 7 4 5 4 7 4 4 4 6 6 4 5 5 5 5 6 3 4 3 3 7 3 6 7 3 7 5 7 5 6 3 3 4 6 4 6 3 4 5 2 3 5 5 6 5 6 3 3 6 4 5 3 2 5 1 2 1 5 4 1 3 4 5 1 4 1 3 1 )
#(2 3 2 1 5 2 2 3 4 5 1 2 4 1 3 2 3 6 3 3 6 6 2 4 2 3 5 3 2 5 2 5 6 2 2 4 4 3 4 3 5 4 4 4 5 7 6 5 6 3 4 4 3 7 4 4 4 7 3 7 3 4 3 7 5 7 7 6 5 3 7 7 3 4 3 6 6 4 4 5 6 3 3 5 6 6 7 6 4 5 3 3 7 6 5 4 7 3 4 3 6 4 3 6 7 7 4 5 4 4 6 2 3 5 5 5 2 2 4 4 5 2 3 4 3 5 1 3 3 5 5 2 2 1 4 5 5 2 4 4 1 )
#(5 4 4 3 2 2 3 1 3 5 4 5 4 3 5 2 2 5 6 3 4 3 6 3 5 5 3 5 2 6 5 6 4 4 6 6 4 4 4 3 7 4 4 6 5 4 3 4 4 4 3 6 7 6 5 4 4 5 7 5 7 5 4 7 4 5 7 8 5 7 7 4 6 7 5 8 4 6 5 3 7 7 7 3 5 3 3 6 7 3 6 7 4 5 5 5 6 6 4 4 5 6 5 4 6 5 7 5 5 3 3 4 5 4 5 4 3 3 3 2 5 4 5 6 2 2 2 3 2 3 2 5 2 3 5 5 4 1 4 1 3 )
#(3 1 1 1 1 3 1 1 3 5 2 5 3 5 1 6 6 3 5 3 4 2 6 3 2 4 6 2 5 6 3 6 5 3 6 3 6 4 4 7 5 7 3 7 3 4 5 3 5 6 5 7 5 6 6 4 7 5 5 5 6 8 4 7 8 6 4 8 4 6 5 5 6 4 5 5 4 5 7 5 5 7 6 3 3 5 6 5 6 5 6 6 3 5 3 7 4 5 5 4 5 5 4 6 4 7 5 7 7 7 2 2 3 6 3 2 2 2 3 3 6 3 6 5 6 6 3 6 3 4 5 3 2 2 3 5 3 1 1 4 3 )
#(1 1 3 3 4 1 2 1 4 4 1 1 3 4 2 4 5 6 2 5 2 5 5 3 3 2 4 2 4 6 3 4 5 6 6 5 4 4 5 6 5 5 3 4 6 4 5 4 5 7 3 5 7 3 4 4 7 6 8 7 8 5 7 6 7 8 8 4 5 8 5 4 7 4 5 6 6 8 5 8 4 4 5 8 8 5 6 7 3 5 3 7 4 5 6 6 6 7 7 7 7 6 6 3 4 7 6 5 6 3 4 3 5 6 3 5 4 5 5 4 6 4 6 4 2 6 4 2 2 3 4 2 5 2 2 1 4 1 5 5 3 )
#(3 2 4 1 5 4 5 2 4 5 1 2 3 3 2 2 3 5 4 5 6 2 6 2 4 4 3 3 6 2 3 6 4 4 5 4 5 3 4 7 4 6 6 3 7 6 7 6 7 4 7 4 5 8 7 7 6 8 8 5 5 4 4 5 4 6 8 7 5 8 8 8 6 8 7 7 6 6 5 4 8 8 5 7 7 7 7 7 8 8 3 3 5 3 4 7 4 7 3 7 3 3 7 5 6 5 7 7 6 3 3 5 6 4 3 2 5 5 3 3 3 5 6 6 3 3 6 5 5 5 5 2 3 2 2 5 2 4 1 3 2 )
#(2 3 4 5 3 5 1 4 5 2 3 5 1 3 5 4 6 4 6 2 6 4 6 5 3 5 6 2 2 4 4 4 6 4 5 6 5 6 5 4 3 3 4 5 7 7 5 6 6 4 7 6 6 8 6 7 8 4 6 4 4 8 6 6 5 4 5 7 5 5 4 8 4 7 6 4 4 8 6 5 7 4 5 7 8 5 5 4 5 5 5 6 7 6 6 3 4 3 3 6 7 4 7 4 4 6 3 6 7 5 5 7 6 5 6 5 3 6 5 4 3 6 2 2 4 5 4 4 3 4 2 2 2 5 1 5 5 4 2 4 5 )
#(3 3 4 3 5 2 4 5 5 4 3 5 2 5 5 3 2 3 5 6 4 2 5 2 4 5 2 2 3 6 6 4 5 6 5 6 6 7 4 6 5 7 6 3 6 7 3 6 7 6 6 6 7 8 8 5 5 6 8 5 5 8 4 8 4 6 7 4 5 8 7 6 7 6 4 6 6 4 7 8 8 8 5 7 7 5 4 8 6 6 5 7 5 7 4 3 4 7 7 3 3 5 5 3 6 3 5 7 4 5 7 3 3 4 4 3 4 6 2 3 4 2 6 2 2 6 5 6 4 5 6 1 5 2 4 4 2 2 4 4 5 )
#(3 5 2 4 5 5 1 5 3 5 3 2 2 2 6 2 5 6 6 2 4 3 5 2 3 4 4 3 4 5 6 5 5 5 4 7 3 5 7 6 6 5 4 6 5 6 7 6 8 8 6 8 4 7 7 6 5 7 5 7 5 5 7 5 4 7 5 6 5 5 7 8 7 4 7 4 6 5 8 8 8 7 7 5 8 6 6 7 6 7 4 4 4 5 7 4 5 5 5 4 7 7 4 5 7 6 6 6 7 3 7 7 4 4 6 5 5 5 4 6 2 4 3 3 4 4 3 5 4 3 5 4 1 1 2 4 5 5 2 2 1 )
#(2 1 2 2 1 5 2 2 3 2 4 3 3 5 5 2 4 6 5 5 2 2 4 2 5 2 5 4 7 7 5 6 6 5 3 6 6 3 4 7 4 7 6 7 4 5 6 6 7 6 5 7 4 6 8 6 8 5 5 5 5 4 6 7 5 5 5 5 4 4 7 4 7 4 4 7 4 4 5 6 8 7 8 6 6 6 6 6 5 5 4 4 8 7 4 5 6 7 5 7 3 5 6 5 6 3 5 4 4 4 5 3 4 3 5 5 5 3 5 4 6 4 4 6 6 3 4 5 3 4 3 2 4 4 3 5 5 3 3 4 1 )
#(2 5 1 5 4 5 3 5 3 4 2 6 5 6 6 2 6 4 5 5 5 5 4 4 6 5 3 5 7 4 4 3 3 3 5 5 5 6 3 3 3 5 7 7 5 8 4 6 8 6 6 6 4 7 7 5 4 4 5 8 8 4 4 4 5 7 6 7 5 6 5 8 6 5 8 7 8 8 8 8 5 4 6 4 7 7 7 6 7 5 6 6 5 6 4 5 8 7 4 5 3 4 5 7 7 7 7 7 7 5 4 3 3 5 7 4 6 6 6 6 4 2 4 6 3 4 2 3 3 4 4 6 6 2 5 5 1 4 5 1 4 )
#(3 1 3 4 1 5 2 5 5 5 2 3 5 3 2 4 2 2 5 2 3 4 2 3 4 4 3 3 6 7 4 4 6 3 4 4 4 4 4 6 3 3 7 8 5 7 4 6 8 6 6 4 7 5 4 7 8 4 8 8 6 8 5 6 6 4 8 8 7 6 6 4 4 6 4 5 8 7 8 4 5 5 5 6 4 4 4 5 5 7 8 6 5 4 7 5 8 5 6 6 7 3 7 3 3 4 5 6 7 4 3 6 4 6 3 4 7 4 4 3 3 2 6 2 4 5 3 4 3 4 6 4 5 4 2 3 1 3 1 4 5 )
#(1 4 2 5 1 2 5 4 6 5 3 6 4 4 5 5 4 4 4 5 4 5 3 6 7 4 6 3 6 6 4 5 7 5 7 4 3 3 3 4 7 7 6 6 7 4 7 7 4 4 7 8 7 6 5 4 5 7 7 5 4 6 8 7 8 6 7 4 7 7 6 7 7 4 5 4 5 7 5 7 5 4 4 8 6 7 8 7 8 6 6 6 6 7 4 5 6 7 7 8 7 5 4 5 5 5 4 4 4 7 5 4 5 7 5 7 7 4 5 6 4 5 3 6 6 5 6 3 3 2 4 4 2 6 5 3 4 5 2 3 3 )
#(4 1 1 2 4 1 1 3 5 3 5 4 2 3 3 4 2 4 2 4 4 6 6 3 6 4 7 6 7 6 4 6 3 4 7 3 5 6 4 4 7 8 4 7 4 7 7 5 7 4 8 8 8 7 4 7 5 8 8 5 8 8 8 7 5 7 6 4 7 8 7 4 5 6 4 5 4 8 8 6 7 4 7 4 8 7 7 6 7 7 7 5 4 6 6 4 4 4 8 5 8 4 5 7 5 5 3 7 4 7 4 6 3 6 4 6 5 3 5 4 6 2 6 2 3 6 6 3 6 3 4 5 4 2 4 4 2 5 4 5 1 )
#(2 5 5 2 2 2 5 4 4 5 4 2 2 5 3 6 3 5 3 5 4 4 4 3 6 6 3 6 7 6 7 5 7 4 7 5 7 7 4 8 6 5 4 8 7 4 6 4 6 5 5 5 7 5 4 4 5 4 6 5 5 8 4 5 5 4 6 5 7 6 5 9 8 9 8 4 8 6 7 6 5 5 4 7 7 5 7 6 5 8 7 4 8 8 7 4 6 7 7 4 8 4 4 5 3 6 5 3 5 4 4 7 3 4 6 4 4 3 6 6 6 4 3 6 3 4 4 6 2 6 5 4 4 4 6 5 3 2 3 4 2 )
#(5 4 4 5 5 1 5 3 2 6 3 4 4 3 2 2 6 3 3 3 6 5 6 7 7 4 5 6 3 7 6 7 5 4 4 4 6 3 8 6 4 8 5 5 8 6 6 4 6 6 8 8 6 7 6 6 5 4 8 7 5 7 5 6 5 8 7 7 7 6 5 8 5 5 8 5 8 5 8 5 5 6 8 6 8 4 5 8 8 7 8 7 7 8 6 7 6 5 7 5 5 6 7 4 7 7 3 7 7 3 7 4 4 6 7 5 6 6 4 7 5 5 5 6 2 4 4 6 4 6 3 5 3 6 4 2 4 5 3 4 5 )
#(4 2 2 3 5 4 4 2 3 6 4 4 2 2 3 6 5 5 2 4 5 6 4 3 3 4 5 3 4 7 3 5 5 7 3 6 5 5 4 4 4 4 7 4 8 5 5 7 8 6 7 4 7 6 6 4 5 4 7 8 8 9 5 8 9 7 7 5 8 7 7 8 7 8 8 7 5 5 5 5 6 5 8 7 7 4 4 8 7 8 4 5 5 5 4 4 5 8 6 5 7 7 5 4 8 4 4 5 5 6 3 6 5 3 5 7 4 6 3 4 7 5 4 2 2 4 6 2 5 4 6 2 3 6 2 3 4 5 1 2 4 )
#(2 3 3 1 1 5 3 5 3 2 4 5 3 3 3 5 2 2 6 3 6 3 3 3 4 5 4 3 6 4 7 7 4 6 3 3 7 5 5 5 6 4 8 5 6 4 4 5 4 8 8 6 8 4 4 6 6 9 8 8 8 7 8 8 6 5 7 6 9 5 5 9 9 8 6 8 6 7 5 5 5 9 5 8 6 9 7 5 8 5 8 4 4 4 6 4 5 8 7 8 4 6 5 6 5 6 5 5 4 3 5 3 3 7 7 6 6 5 5 7 6 6 3 2 2 5 6 5 3 3 2 3 2 6 6 2 2 5 5 3 5 )
#(3 5 5 2 2 3 4 3 5 5 5 5 2 6 2 3 3 6 6 4 4 4 3 3 7 3 5 4 4 5 5 5 3 3 4 8 7 5 8 7 7 6 4 5 7 8 8 7 7 8 5 8 7 7 8 8 9 7 6 9 7 6 8 7 5 9 7 5 6 7 9 8 8 9 6 7 9 9 6 6 9 7 6 5 7 7 5 8 5 8 8 7 7 7 5 5 7 4 6 7 4 7 6 7 7 5 8 6 4 3 4 5 5 6 7 7 3 7 7 3 6 6 4 5 2 5 5 4 6 3 6 5 4 4 2 4 3 4 5 3 4 )
#(5 5 3 3 2 5 6 6 2 6 3 5 6 3 3 5 6 2 3 4 3 4 4 7 4 6 4 6 4 5 5 3 6 7 5 6 7 5 7 8 6 5 4 5 8 7 6 8 7 6 4 8 6 9 5 5 8 7 6 9 6 5 6 7 8 6 6 7 9 6 8 8 7 8 6 7 7 8 6 9 5 5 8 9 8 7 6 6 8 9 5 5 6 8 4 8 7 4 4 6 8 6 6 8 4 5 4 7 7 7 3 4 7 5 5 5 4 7 7 5 5 4 7 7 3 3 4 6 6 4 2 3 3 5 5 4 2 6 2 5 3 )
#(3 3 1 4 3 6 3 6 2 5 5 3 5 3 6 2 2 6 7 7 7 4 6 5 4 5 4 7 6 3 4 4 6 6 7 5 8 4 6 7 8 7 5 6 5 8 4 8 7 5 8 9 6 6 6 8 6 5 5 8 6 7 8 5 5 5 9 9 6 6 5 7 6 6 9 7 9 5 5 9 9 9 8 9 6 7 5 5 6 9 8 6 8 6 4 8 6 6 6 4 8 5 4 8 4 4 4 6 6 7 6 6 6 5 5 3 6 7 7 5 6 6 3 7 4 5 6 4 5 5 2 6 6 4 3 5 4 2 3 5 5 )
#(3 3 4 3 5 6 2 3 6 2 2 2 4 3 5 3 3 5 4 6 3 5 5 5 3 7 6 7 4 4 5 7 7 7 5 4 8 5 4 7 5 6 5 6 6 7 8 8 5 7 5 5 7 9 6 5 7 6 7 6 8 7 9 9 8 6 9 8 7 5 5 9 9 7 8 6 9 9 8 8 9 9 8 7 9 5 6 9 7 9 7 9 5 8 5 4 6 8 4 8 6 6 4 8 6 8 8 4 8 7 5 5 5 4 5 6 7 3 7 3 4 7 7 6 4 5 3 6 2 6 5 6 6 6 3 4 2 3 2 1 2 )
#(5 2 5 2 2 2 6 5 5 4 2 2 4 5 4 5 3 5 7 4 3 7 6 7 7 3 7 3 3 7 4 5 6 5 7 4 7 7 4 4 8 8 4 4 7 5 5 4 8 5 5 8 6 6 6 8 7 9 7 9 8 5 5 6 9 7 8 6 7 5 8 8 5 6 7 7 5 5 8 5 8 9 8 5 6 8 6 8 5 8 7 6 8 6 6 8 5 6 7 7 7 8 8 8 6 6 5 5 6 4 8 8 3 4 5 6 6 7 3 7 7 3 5 5 5 5 2 4 3 3 4 4 6 2 5 5 5 3 2 2 4 )
#(3 2 1 3 4 6 4 6 4 6 5 5 6 4 5 2 3 7 7 4 5 4 7 7 3 6 6 6 7 5 3 5 7 7 6 8 7 8 6 8 6 6 5 8 5 7 6 6 6 8 7 7 5 7 9 7 8 5 7 8 6 9 7 7 6 6 8 5 9 5 8 5 9 9 5 5 7 8 5 8 5 5 5 6 8 6 7 7 5 8 6 5 5 7 5 9 4 7 4 7 5 6 7 4 6 4 8 8 8 8 4 5 5 5 6 4 6 5 5 6 5 6 4 6 3 5 4 4 4 6 3 4 4 5 3 3 5 6 6 6 1 )
#(3 4 6 3 5 4 5 6 3 6 6 6 4 6 5 6 3 6 3 5 4 3 7 4 4 7 6 4 3 3 5 8 8 7 8 8 5 8 8 7 5 4 6 7 4 5 8 8 8 8 8 6 6 9 9 7 6 9 5 6 6 5 9 6 7 6 5 8 6 8 5 5 6 8 8 8 8 7 7 8 8 6 7 9 7 7 6 5 8 9 8 5 9 9 5 7 6 8 7 4 6 6 6 7 4 7 4 7 4 8 8 4 5 4 6 6 4 7 5 6 6 5 5 6 3 7 6 6 4 5 3 2 6 2 3 5 6 2 4 5 4 )
#(1 2 5 2 4 3 2 5 6 2 3 4 3 4 5 3 5 5 7 5 6 4 4 5 3 6 7 5 3 8 5 7 6 5 4 5 4 4 5 8 4 5 8 5 8 9 5 6 6 5 9 5 8 6 5 7 8 5 6 9 9 5 8 8 5 9 5 5 6 7 6 5 8 8 7 6 6 5 7 9 5 7 8 8 6 7 7 5 8 8 6 6 6 8 8 6 6 8 4 6 8 7 7 7 8 6 8 6 6 8 7 7 5 5 6 4 7 4 7 6 5 3 7 4 7 3 6 5 3 2 6 2 5 2 5 6 3 3 2 6 4 )
#(3 5 6 5 6 3 5 3 6 3 4 5 5 4 5 4 5 4 6 3 5 4 3 7 7 6 6 3 5 8 6 4 6 4 8 4 7 5 6 5 6 5 8 4 6 6 9 6 6 7 8 6 7 5 6 6 5 8 6 9 9 8 6 9 5 7 9 9 6 9 5 9 8 8 6 5 7 9 6 8 5 6 9 8 8 5 6 5 6 5 9 8 6 8 7 8 9 6 5 7 6 5 6 6 7 5 7 7 7 4 8 8 5 6 4 4 3 7 5 7 4 5 6 4 6 3 4 5 4 6 6 5 2 3 4 5 5 3 4 4 4 )
#(4 5 2 3 6 3 3 2 2 6 3 2 4 6 4 6 6 6 6 4 6 6 7 7 3 6 7 7 5 4 7 7 7 5 5 4 7 8 8 5 5 7 6 9 6 5 7 6 5 6 8 9 7 6 6 6 5 9 6 5 8 8 9 7 9 8 7 6 6 9 6 8 7 9 9 9 7 8 5 9 8 5 9 6 5 9 9 9 8 8 8 8 5 9 5 6 9 6 5 7 8 5 4 4 7 5 4 6 6 4 6 5 5 8 4 3 5 4 6 7 7 7 6 5 6 4 7 6 4 5 2 3 4 2 6 4 3 5 6 5 3 )
#(3 2 3 2 3 3 4 5 2 5 5 3 5 4 3 4 4 5 3 4 6 6 6 6 6 7 3 7 4 5 7 7 6 8 6 7 6 8 5 6 7 4 8 5 6 9 9 5 5 6 5 6 7 9 5 6 9 5 8 5 8 5 7 8 8 8 6 9 8 6 9 8 6 7 9 7 7 7 8 7 8 7 5 6 8 6 9 6 7 9 8 5 7 5 7 7 7 9 8 8 6 6 4 6 8 6 6 5 5 6 7 4 8 7 7 5 7 3 5 5 4 4 7 4 6 3 5 3 5 2 5 6 2 6 4 2 5 3 3 5 3 )
#(3 2 4 3 2 4 3 4 4 6 4 6 3 2 5 4 3 3 4 6 3 7 6 3 4 3 6 6 8 7 4 8 7 4 7 4 6 5 8 4 5 8 8 5 5 7 6 5 9 7 7 6 6 6 8 5 5 5 5 5 9 9 9 8 8 6 6 9 8 9 7 9 7 9 6 6 9 8 9 6 6 8 9 6 7 8 8 7 7 7 5 5 5 6 8 7 6 7 8 8 8 8 6 7 6 6 4 7 5 5 7 6 8 5 7 5 3 6 5 4 5 6 5 6 5 3 6 7 5 3 5 5 3 3 6 4 3 4 5 4 2 )
#(4 2 4 4 2 5 5 5 6 3 6 2 6 6 6 3 4 5 4 3 5 7 5 6 4 5 3 8 7 5 5 5 7 5 7 8 5 4 6 8 7 9 9 6 7 8 6 8 8 8 5 6 9 6 8 5 8 5 7 9 6 7 8 6 6 9 6 8 7 9 6 6 6 8 6 7 9 8 8 6 9 9 7 7 7 7 5 7 7 6 5 9 5 7 8 7 7 6 7 5 5 7 5 4 4 4 6 6 7 6 6 7 7 5 5 4 7 4 7 7 7 5 7 3 4 3 7 3 3 4 5 5 2 2 4 4 3 5 4 3 3 )
#(3 3 2 6 6 4 5 5 4 2 5 5 6 6 5 3 4 3 3 7 4 5 5 7 4 4 5 4 5 8 8 6 6 6 4 4 8 7 6 5 5 5 7 7 9 8 9 9 9 7 5 9 7 5 9 8 8 9 8 8 6 9 6 6 6 9 6 9 7 7 6 7 8 8 7 9 9 7 6 6 9 9 8 7 9 9 5 6 9 6 8 5 8 6 8 7 8 9 6 8 5 9 8 6 8 4 7 5 5 7 7 5 8 8 8 4 8 3 4 7 6 6 4 4 6 4 7 5 6 4 3 5 3 2 5 5 2 2 6 4 6 )
#(3 5 6 5 4 5 4 4 4 3 5 4 3 7 7 7 3 5 6 5 7 4 5 5 4 4 7 5 5 7 4 7 5 6 4 4 7 4 7 4 6 5 6 6 7 6 5 8 5 5 9 7 8 6 8 5 6 6 7 6 9 6 6 7 8 9 7 8 9 8 8 9 8 8 6 9 9 9 9 9 7 7 7 7 9 9 8 5 8 7 6 6 8 8 5 6 9 8 7 7 7 9 9 4 5 4 6 7 5 6 4 6 8 8 6 8 4 5 5 5 5 6 6 3 6 7 5 3 6 3 3 3 6 6 2 2 2 5 3 3 2 )
#(5 3 6 5 4 6 6 6 2 4 2 2 6 3 6 6 6 5 5 7 4 7 7 6 3 6 7 7 7 6 8 8 4 8 5 4 4 7 4 8 8 8 6 7 8 7 7 8 6 6 7 7 6 9 8 9 9 8 7 9 8 6 8 6 6 7 7 7 8 6 8 6 9 6 9 6 6 8 6 7 6 9 6 7 9 8 9 8 6 5 9 8 7 6 9 6 7 6 9 6 7 9 7 9 5 4 8 6 5 6 8 6 8 7 6 7 7 5 7 6 6 3 4 6 6 6 5 7 6 6 3 6 6 6 5 2 2 2 2 2 3 )
#(3 2 2 4 3 4 5 6 6 6 4 3 5 6 5 7 5 4 4 4 6 3 3 6 6 6 6 4 7 7 6 6 8 5 4 7 6 6 7 8 7 6 9 6 9 8 5 9 8 9 6 5 5 6 9 8 9 6 6 8 9 8 7 6 7 6 6 6 6 6 8 7 6 7 6 6 7 6 8 8 9 8 8 6 7 6 9 7 8 8 7 8 7 7 7 9 5 7 6 7 6 9 8 7 4 4 5 8 5 8 8 8 6 4 6 6 8 4 7 4 3 7 5 3 4 6 6 7 5 5 4 2 5 2 4 4 4 2 6 5 3 )
#(2 5 3 3 6 2 3 6 6 2 5 4 4 3 5 3 5 5 3 4 6 6 3 7 4 8 5 4 4 4 4 8 4 4 8 7 6 7 5 6 6 7 8 8 6 7 7 5 7 8 9 6 6 7 6 8 8 6 6 9 9 8 8 6 7 7 9 9 7 7 6 6 7 6 9 7 6 6 6 9 9 8 9 7 8 8 8 9 7 8 6 6 8 7 8 7 8 8 5 6 6 7 5 6 8 8 4 6 7 7 7 8 6 6 8 4 5 5 3 7 3 6 6 7 6 5 4 4 3 7 6 4 3 4 6 4 6 6 5 5 2 )
#(4 6 3 2 3 3 3 4 6 2 4 3 5 3 5 3 7 5 4 6 4 4 7 3 7 6 6 8 4 7 7 5 5 7 8 8 4 5 7 9 6 9 6 8 5 9 5 9 5 6 5 7 9 9 6 9 9 6 8 8 7 8 7 6 9 8 6 8 8 8 9 9 9 8 9 9 6 7 9 7 7 6 7 6 9 8 9 6 8 6 6 8 9 8 9 7 8 8 8 5 5 6 8 9 5 5 5 6 6 5 6 7 8 4 8 7 5 5 8 4 4 3 7 3 4 7 6 6 7 4 7 3 4 2 2 2 4 2 6 6 3 )
#(6 2 5 5 6 5 3 5 5 6 6 4 6 3 3 5 4 4 5 5 4 5 7 6 8 6 8 6 5 6 7 5 5 6 6 8 6 6 5 6 8 5 6 8 6 8 6 7 9 9 9 6 8 6 8 7 9 6 7 8 8 8 7 7 8 6 6 9 6 9 6 8 9 6 8 8 8 7 7 6 8 7 9 7 9 8 7 6 9 6 9 7 7 9 6 7 7 6 7 7 5 6 8 6 8 9 6 7 8 8 6 7 6 8 8 8 5 5 7 5 3 7 6 6 5 5 6 3 7 7 6 6 5 3 3 4 2 4 2 4 2 )
#(6 2 6 6 5 2 5 5 6 4 2 6 7 6 3 5 6 5 5 7 6 6 4 7 7 8 6 4 7 6 8 6 4 4 8 7 8 7 5 9 5 9 8 9 7 8 9 5 9 5 7 7 7 6 7 6 8 8 9 7 7 6 7 6 6 9 9 8 9 6 9 7 8 8 8 8 7 9 6 9 9 6 9 7 8 9 7 9 8 9 7 8 6 5 7 9 6 7 6 7 5 8 7 9 5 9 4 8 6 5 8 5 8 5 6 4 7 5 4 3 5 7 7 4 7 7 6 4 6 3 3 4 3 4 5 5 6 5 6 4 5 )
#(2 3 2 2 4 3 2 4 5 2 5 7 5 4 3 5 3 3 5 4 3 5 6 4 4 6 4 6 6 4 4 6 7 7 8 8 6 9 7 7 6 6 9 6 9 7 6 9 8 7 8 7 8 6 8 8 6 9 6 7 9 9 6 7 7 7 6 9 8 8 9 9 9 7 9 6 8 7 8 6 8 7 6 8 6 7 9 9 6 9 9 6 7 6 9 6 5 6 7 5 5 7 5 7 8 5 7 8 7 7 8 5 7 6 7 4 8 7 8 3 5 5 6 7 7 4 3 4 4 4 7 5 3 4 2 2 5 6 5 6 6 )
#(3 4 2 3 4 2 2 5 3 6 2 4 5 7 7 7 6 4 6 6 5 7 3 4 7 4 8 7 6 8 8 8 5 5 6 7 9 5 8 8 8 5 9 6 7 9 5 7 5 7 6 9 9 6 7 8 8 6 9 7 6 9 6 8 9 6 7 7 7 8 9 8 8 7 8 8 9 9 9 8 6 6 9 7 9 7 7 8 6 8 8 8 9 7 9 7 8 6 5 6 5 6 6 5 5 5 5 6 5 6 4 5 7 5 8 8 4 5 7 8 5 3 3 3 3 4 3 3 6 7 4 6 4 5 5 3 3 3 2 4 5 )
#(5 4 3 3 2 6 2 2 4 6 4 6 4 5 6 4 4 4 7 3 4 5 3 6 7 7 7 8 8 8 7 8 5 5 7 7 5 9 9 8 6 5 6 8 6 6 9 6 6 6 9 8 8 9 8 7 9 6 8 7 7 9 6 9 9 8 7 9 8 8 8 8 7 7 7 9 7 9 8 6 8 9 6 9 6 8 6 7 9 7 9 9 7 6 9 9 9 6 6 5 7 9 8 8 8 5 8 8 8 8 5 7 6 4 5 5 7 5 5 8 5 3 7 6 6 7 6 6 7 7 3 5 5 6 5 3 4 4 6 2 2 )
#(6 4 3 3 3 4 5 3 4 3 7 3 5 6 5 3 7 3 6 7 3 6 4 5 4 8 7 4 7 8 7 7 7 8 8 5 7 7 5 9 6 7 5 5 9 6 7 7 7 6 7 7 6 9 7 9 8 8 8 9 8 8 9 9 7 7 8 8 9 8 8 9 9 9 9 7 8 8 7 7 9 7 9 8 6 9 6 9 8 8 7 7 9 6 9 6 6 9 5 9 6 6 5 8 5 8 7 6 8 8 8 8 6 7 5 8 7 4 7 4 3 4 5 5 7 5 6 3 6 7 6 6 4 3 4 4 2 3 2 3 4 )
#(4 2 3 2 6 2 2 6 6 4 3 4 5 5 3 6 7 3 4 5 7 6 6 4 5 6 5 7 4 8 7 8 8 8 7 8 6 8 8 5 7 8 8 8 9 6 9 6 9 9 9 8 8 6 7 6 9 7 9 6 8 6 9 7 8 8 7 7 9 8 9 8 7 9 9 9 7 8 9 9 8 8 8 6 8 6 9 6 8 8 7 7 9 9 7 5 8 8 8 7 7 7 5 5 9 6 8 8 5 8 5 8 4 7 5 6 8 6 6 6 3 4 5 3 6 6 5 7 5 6 3 4 4 6 4 2 2 4 3 4 6 )
#(2 5 3 6 2 6 3 6 2 5 3 5 6 4 7 7 6 6 6 6 4 5 7 7 6 8 8 6 4 4 6 6 6 7 7 7 5 8 5 7 5 6 6 9 7 7 5 9 9 6 6 9 9 9 8 7 7 9 7 7 7 9 9 8 9 8 7 9 9 9 9 7 7 9 7 8 7 9 9 9 7 7 6 9 6 6 6 9 7 8 9 9 6 6 8 7 8 9 7 5 6 8 8 9 6 7 7 5 8 4 6 8 5 6 4 7 7 4 5 6 3 7 3 3 3 5 4 4 7 5 6 6 4 2 4 3 5 6 4 6 5 )
#(6 4 3 5 4 4 4 5 4 4 5 5 5 6 7 4 5 6 6 5 5 6 7 6 6 5 6 7 6 5 4 7 7 7 4 6 5 8 7 7 9 8 5 7 7 9 9 9 8 8 6 7 7 7 7 6 9 8 9 6 7 8 8 9 7 7 9 8 8 7 8 8 7 9 9 8 7 8 9 7 7 8 9 7 6 9 8 7 8 9 6 8 9 7 9 5 7 7 7 9 8 8 8 8 6 9 8 5 6 4 5 6 4 6 7 7 7 4 4 8 8 7 3 3 7 6 4 5 7 3 5 7 4 2 5 6 4 3 4 6 6 )
#(5 4 3 3 6 4 3 2 2 3 4 7 3 5 5 7 4 7 5 6 4 6 7 6 8 8 4 7 5 5 8 5 6 4 8 8 7 7 5 5 7 9 7 7 9 8 5 9 8 9 7 7 9 6 9 8 7 6 9 8 9 9 7 7 8 7 9 8 8 9 7 9 8 8 9 7 9 9 9 8 7 9 7 6 9 6 9 8 6 8 6 6 6 7 6 6 5 6 8 9 9 5 5 6 8 8 6 6 6 4 4 8 5 5 8 4 8 8 8 8 6 6 3 4 3 7 3 3 3 5 4 3 4 6 3 6 3 3 6 5 4 )
#(5 3 3 4 2 5 4 5 3 3 4 5 7 5 4 4 6 7 7 4 4 4 8 7 4 7 4 5 7 8 5 8 7 8 5 7 6 8 6 9 8 5 8 8 5 5 7 7 9 8 9 9 9 6 7 8 7 6 8 8 9 8 8 9 7 9 7 8 9 8 9 9 7 8 8 9 9 7 8 9 7 9 7 7 9 9 9 7 8 7 8 6 7 9 8 8 7 5 5 8 6 8 9 9 7 9 5 5 8 5 8 4 7 7 4 5 5 7 8 5 6 5 4 7 3 4 3 7 5 3 4 5 4 3 6 5 2 5 6 3 6 )
#(4 5 2 5 3 2 5 2 4 2 4 3 3 3 3 5 5 5 6 4 7 6 5 7 8 8 7 8 7 7 7 8 8 5 8 5 6 7 9 5 6 5 6 9 7 6 5 6 9 9 9 6 8 6 7 8 6 7 9 9 8 9 9 9 9 7 7 7 8 9 8 7 9 7 7 9 7 9 9 8 7 9 8 8 6 8 6 6 7 8 8 6 9 6 8 6 7 9 7 7 6 9 6 5 6 5 6 6 4 4 6 6 6 6 5 7 5 5 5 5 7 5 7 4 7 6 3 5 5 7 4 3 3 6 6 4 3 5 2 6 4 )
#(2 6 4 4 4 3 5 4 3 5 6 4 3 4 6 6 7 7 5 5 3 3 7 7 7 7 6 4 7 5 8 4 8 8 8 9 8 9 6 6 5 6 5 9 6 7 8 6 9 6 7 7 9 6 8 8 8 8 8 7 8 9 9 7 8 8 9 9 9 9 8 9 7 9 7 9 7 7 7 7 8 9 9 9 6 7 9 6 9 6 6 7 9 9 9 9 5 6 6 9 6 5 6 7 8 8 9 5 9 5 7 5 5 8 4 4 8 7 5 6 5 7 6 4 4 4 4 4 6 7 3 6 6 3 6 6 2 4 6 3 6 )
#(3 5 2 2 5 4 5 2 2 2 6 6 6 6 6 3 6 3 4 4 7 7 4 6 4 6 5 4 4 5 5 7 6 5 6 7 5 8 5 6 9 5 9 9 5 8 7 8 9 6 8 8 9 8 6 6 8 9 8 8 9 9 9 8 9 8 9 9 9 8 7 9 8 7 7 8 9 7 8 7 7 8 8 9 6 7 7 6 6 6 9 9 8 8 9 8 5 8 6 9 5 9 6 8 9 6 5 5 8 6 4 6 5 5 7 6 4 6 5 4 5 7 4 4 6 4 3 7 5 3 6 3 3 5 5 5 3 2 3 2 3 )
#(4 6 6 3 6 2 4 4 4 2 4 3 4 4 6 7 6 5 7 5 4 7 5 8 5 7 5 8 5 5 5 4 4 8 5 9 6 8 9 8 9 6 8 6 5 8 7 7 8 6 8 8 6 8 8 6 8 9 9 8 7 8 7 7 8 9 9 9 8 7 8 8 7 9 8 7 7 9 9 9 7 7 9 9 7 9 6 8 8 6 9 9 9 6 8 8 9 5 6 6 5 5 8 9 9 6 6 7 7 8 8 8 7 7 7 8 6 5 8 5 4 6 7 4 5 7 4 3 5 4 4 5 3 4 6 3 4 5 6 2 3 )
#(5 2 4 2 4 5 3 4 3 3 7 4 3 6 7 4 4 6 3 5 6 4 6 7 5 7 7 5 4 6 7 6 6 7 6 8 8 7 6 6 9 5 6 9 9 8 8 9 6 7 8 9 9 8 7 9 7 8 6 7 9 7 8 7 8 8 8 9 8 7 8 8 8 7 7 9 7 9 7 7 8 9 9 9 7 7 7 7 7 6 7 6 7 6 7 9 7 9 9 9 6 9 5 5 5 9 5 7 7 6 8 7 6 4 5 8 5 8 8 4 6 4 6 4 4 5 5 3 7 4 3 3 5 5 2 3 3 5 4 3 6 )
#(2 6 3 4 4 3 2 6 6 3 5 5 5 7 3 6 5 5 7 5 5 5 4 5 5 8 8 5 7 8 5 4 4 4 9 6 6 6 9 6 6 8 9 7 9 8 8 7 7 6 6 8 6 9 8 7 9 8 9 7 9 7 7 8 8 8 7 9 8 7 8 9 7 9 7 9 9 9 9 8 8 8 8 7 6 6 6 7 6 9 9 8 7 8 9 6 5 9 9 6 5 6 5 9 5 6 8 6 8 4 8 8 7 7 5 4 8 7 6 8 8 7 4 7 6 4 4 5 3 7 7 3 7 5 3 2 2 6 6 3 2 )
#(2 5 4 5 2 3 5 2 6 5 4 3 6 7 3 7 7 3 4 5 3 3 7 7 7 7 5 6 8 8 4 6 7 4 8 5 7 5 8 5 9 7 7 7 6 6 9 7 6 7 6 8 8 7 6 8 8 7 7 7 9 7 7 8 9 8 7 7 8 8 8 7 8 8 9 9 7 9 8 9 9 7 8 9 9 6 9 9 6 6 9 6 6 8 8 6 7 5 6 6 7 7 5 6 9 6 7 5 7 8 7 5 8 7 6 4 8 5 7 8 5 7 6 3 5 7 6 3 3 3 7 4 5 2 3 5 3 5 3 6 5 )
#(4 5 6 2 6 6 5 2 2 5 6 3 3 4 5 6 7 5 5 5 7 7 6 4 5 6 4 6 8 7 7 6 7 7 7 6 8 7 6 8 5 8 8 6 7 5 6 9 6 8 9 7 6 9 6 8 7 6 8 9 9 7 9 7 7 8 8 8 8 8 7 7 8 8 7 7 7 7 9 7 8 8 7 9 7 8 6 7 6 8 9 7 8 6 8 9 6 7 5 6 6 7 5 5 6 7 6 8 6 8 8 6 6 8 6 8 6 7 4 5 8 7 4 6 5 4 5 6 5 7 4 5 6 3 5 3 6 6 5 3 2 )
#(3 2 2 5 4 5 4 2 6 2 3 6 7 4 5 4 3 3 4 5 4 5 7 6 6 6 7 5 6 5 7 7 6 7 8 6 8 9 6 5 7 5 9 9 7 7 6 6 6 8 7 9 7 7 6 9 6 7 6 8 7 9 7 7 8 7 9 8 8 9 7 7 9 8 8 9 8 8 8 8 9 9 9 7 6 8 6 9 9 8 7 8 7 7 7 8 9 7 7 8 8 5 7 7 5 7 8 8 8 4 6 5 7 5 5 7 5 8 6 7 5 4 7 5 5 6 5 6 5 7 4 3 4 2 6 5 3 5 3 4 3 )
#(6 5 6 3 2 3 2 6 6 2 5 6 4 4 5 7 7 6 7 5 7 6 4 5 5 5 4 5 8 8 5 7 8 4 7 5 6 9 9 9 5 6 6 8 6 8 6 9 7 6 8 8 9 6 9 8 9 8 8 7 8 8 9 9 8 7 7 8 7 9 7 8 9 7 7 8 8 7 9 7 7 8 8 6 8 7 6 6 9 9 7 6 8 8 8 8 7 7 6 9 9 8 7 9 5 9 9 8 8 4 7 8 4 8 7 6 5 8 6 8 7 3 4 6 7 5 4 6 4 6 4 4 4 4 4 5 2 3 3 4 2 )
#(5 6 2 6 2 2 5 6 6 2 6 5 5 7 4 5 5 3 7 7 4 3 7 6 8 6 6 4 6 7 5 8 4 7 7 7 7 8 6 9 9 8 7 5 8 9 7 5 6 6 8 8 7 8 8 7 9 9 9 7 7 7 8 7 8 7 9 7 8 7 7 7 8 9 7 7 8 9 7 7 7 9 7 9 7 7 7 8 9 8 6 8 9 7 6 5 9 7 6 9 7 7 8 7 6 9 7 9 6 7 8 6 6 4 8 8 6 4 6 6 7 3 6 6 6 6 4 6 7 4 6 5 3 5 6 6 3 6 4 5 2 )
#(3 5 4 6 3 6 6 6 4 6 5 3 6 6 3 7 7 3 4 4 5 3 4 7 8 8 8 5 6 5 4 4 6 8 4 5 5 5 6 9 6 5 5 9 7 7 9 6 7 6 9 8 9 6 9 7 9 6 9 8 7 6 9 8 7 8 7 7 8 7 7 7 8 9 8 7 8 7 9 7 9 9 6 9 9 9 6 9 9 8 9 6 6 9 7 8 6 6 5 8 9 9 5 5 5 9 5 5 6 8 6 7 4 8 5 6 5 5 4 5 3 6 5 6 4 5 5 6 5 6 6 3 3 5 4 2 5 5 5 6 2 )
#(4 3 4 3 4 4 4 5 5 6 7 3 3 4 4 7 7 4 7 7 6 5 5 6 8 7 4 4 8 6 8 6 6 6 5 6 9 7 8 6 9 6 8 9 9 7 8 8 7 6 6 9 9 6 6 6 9 9 6 9 6 6 6 8 7 9 7 9 8 7 9 8 9 8 9 9 8 7 9 8 9 8 9 7 8 9 8 8 7 8 7 9 8 9 6 7 9 8 9 5 9 8 7 6 7 7 9 8 5 8 8 8 5 5 5 6 7 7 7 4 5 3 4 7 7 5 7 3 3 6 5 3 3 4 6 2 5 4 3 5 2 )
#(5 2 6 3 4 6 4 6 3 4 7 3 3 5 7 5 6 6 7 6 6 5 7 6 8 8 5 4 4 7 7 4 4 7 8 5 7 6 8 7 9 5 5 7 7 6 8 5 8 7 6 7 6 8 8 6 8 7 9 8 9 6 6 7 9 8 8 8 9 7 9 9 8 8 8 7 7 8 8 6 9 9 6 8 7 9 7 8 7 8 7 8 8 8 6 5 5 9 9 5 8 9 9 7 9 8 9 7 6 7 4 7 7 6 5 8 6 6 7 8 5 5 4 4 7 3 4 6 4 5 4 6 6 3 6 5 3 3 3 3 2 )
#(6 3 3 5 3 6 5 2 3 5 6 5 6 4 6 3 6 5 7 5 7 3 4 8 4 7 5 7 4 6 8 5 6 5 7 5 8 8 6 8 8 7 8 6 9 9 8 5 7 7 8 8 6 6 8 8 6 8 9 8 9 7 6 6 9 7 7 7 9 9 7 9 7 8 7 9 9 9 8 7 6 9 8 9 7 8 7 7 9 8 8 7 6 7 6 8 9 7 8 8 9 8 7 5 5 6 9 8 8 5 4 4 7 4 7 7 7 7 4 6 5 3 4 3 6 5 4 7 4 6 4 5 2 6 5 6 3 2 3 5 4 )
#(5 6 6 6 2 3 2 6 6 2 6 4 3 5 4 3 3 4 4 4 4 5 4 5 5 6 6 6 6 6 7 5 5 5 8 8 9 9 7 7 6 5 9 5 7 9 9 5 9 6 6 7 6 7 8 7 6 7 9 7 7 6 8 9 7 9 9 9 6 7 9 8 8 9 6 7 8 6 8 9 7 6 7 7 7 6 8 6 9 7 9 8 7 9 8 8 8 6 6 8 5 7 5 8 6 7 8 7 8 7 6 4 8 5 6 4 8 8 4 7 3 7 7 7 7 6 4 5 3 7 4 5 2 2 5 6 6 6 4 3 4 )
#(6 5 6 3 3 2 2 6 2 2 4 6 4 7 5 3 3 6 6 6 3 6 6 5 5 5 6 6 6 6 6 6 6 7 8 5 4 8 7 9 9 7 9 8 8 7 5 9 9 5 8 9 8 9 7 9 9 6 6 7 8 6 7 9 6 9 6 9 9 7 6 9 6 7 9 8 6 7 8 8 9 9 7 6 6 7 9 8 7 6 8 9 6 7 6 9 8 5 6 6 9 5 9 7 7 6 8 7 8 7 4 5 8 4 5 8 4 7 7 6 3 3 5 3 7 5 5 4 5 4 7 5 4 3 3 5 6 4 5 5 2 )
#(2 3 3 2 5 5 4 5 6 3 2 7 4 6 4 5 6 3 3 6 3 3 6 5 7 5 4 7 6 5 7 6 7 6 4 6 6 5 9 9 8 5 7 8 8 5 9 9 8 9 8 7 8 9 9 8 6 9 9 9 6 9 9 7 9 8 6 6 9 8 8 8 7 8 6 6 6 7 9 9 6 9 7 9 7 6 7 7 8 9 6 6 9 5 8 6 5 6 9 6 7 7 9 7 6 7 8 6 8 4 7 4 6 4 5 4 8 7 8 4 5 3 7 5 3 6 3 4 3 4 4 3 4 3 6 2 5 3 5 4 2 )
#(6 6 5 5 6 4 3 2 3 3 6 5 5 3 4 5 3 7 4 3 6 3 6 5 4 7 4 4 5 4 5 6 8 8 6 4 7 4 7 7 9 6 7 6 6 7 5 7 5 6 9 7 8 8 9 9 7 8 9 9 6 6 8 6 8 6 6 6 7 7 8 6 6 6 9 9 9 9 9 6 8 6 7 6 8 8 8 8 7 8 9 8 6 8 9 8 6 8 8 8 8 8 8 8 9 8 4 5 8 7 4 7 5 6 8 5 7 6 4 4 5 4 4 7 5 4 3 7 4 5 4 6 4 3 5 2 3 2 2 4 3 )
#(5 5 3 5 6 6 5 3 2 5 4 3 6 4 5 4 6 5 3 4 7 7 5 4 6 4 7 7 7 5 7 8 6 8 6 8 8 7 7 7 7 8 6 6 7 9 8 8 5 5 7 5 7 9 7 9 9 9 7 9 9 6 6 7 8 7 6 7 9 9 6 9 8 9 7 7 7 6 7 8 8 6 9 7 8 6 6 6 6 7 6 8 9 6 7 8 8 5 7 9 8 8 6 6 7 6 5 5 4 6 4 6 4 5 8 4 4 7 4 6 6 4 7 3 3 6 7 6 6 3 7 4 4 6 5 5 5 4 5 3 2 )
#(2 2 4 6 3 2 6 3 4 6 6 3 7 7 4 7 5 6 5 4 7 7 5 5 6 7 6 6 4 5 6 7 6 7 5 7 6 7 5 6 9 7 9 9 8 9 7 6 9 6 6 6 5 8 9 9 7 7 9 8 6 6 7 9 6 6 8 7 7 6 6 8 6 9 7 7 9 6 7 9 8 8 7 9 6 8 9 6 7 8 6 8 9 8 9 6 5 9 8 7 7 5 7 8 4 5 5 6 4 8 7 7 7 7 8 8 4 5 3 6 3 7 7 3 7 4 4 5 3 7 4 6 2 2 5 3 5 6 4 5 6 )
#(2 3 3 2 3 5 3 6 5 3 5 5 4 4 7 7 4 5 5 4 4 6 3 3 4 5 5 4 4 4 6 5 6 7 5 4 6 7 5 8 7 5 9 7 8 6 5 6 9 6 5 9 8 9 5 9 9 8 8 6 8 6 6 9 8 7 9 9 7 7 6 7 6 7 8 7 7 7 7 8 7 9 8 8 8 7 9 6 5 9 7 7 7 7 5 7 6 7 5 5 8 5 6 7 8 8 4 7 6 7 7 8 7 5 6 8 6 7 3 6 7 4 3 6 3 3 7 6 3 6 6 2 6 4 2 2 3 3 4 4 5 )
#(3 2 6 6 5 3 2 6 6 4 5 2 5 4 5 4 6 6 7 7 6 4 7 7 7 6 8 4 4 4 7 6 5 6 8 7 5 4 4 7 8 8 6 6 9 6 5 5 6 8 5 6 5 9 7 7 7 8 7 8 8 8 6 8 9 7 8 6 7 6 8 8 6 9 9 7 7 9 8 8 7 7 6 8 7 7 7 6 8 7 7 7 6 9 8 6 7 5 5 9 7 6 6 8 4 7 7 7 5 6 8 8 4 6 8 7 4 3 3 7 6 4 6 7 7 7 7 7 7 5 3 3 6 5 4 3 2 3 5 5 2 )
#(3 6 6 2 4 4 3 6 4 5 6 5 6 6 7 6 3 7 6 4 4 3 4 6 5 3 8 6 6 6 5 6 4 5 8 5 8 4 8 4 6 9 7 8 5 9 8 6 8 9 6 6 9 5 6 6 9 9 6 9 8 6 7 9 7 7 7 7 8 7 8 7 8 6 6 8 7 6 9 6 9 9 6 6 7 6 6 7 6 9 7 6 7 7 6 5 6 9 9 5 7 5 8 7 4 4 4 4 8 4 6 4 4 7 6 8 7 6 4 4 4 5 3 5 3 3 4 5 6 3 5 4 6 5 3 3 2 3 2 6 5 )
#(5 2 5 5 2 2 6 6 3 6 6 2 2 7 3 4 6 6 3 6 6 5 4 4 7 6 5 5 8 5 8 4 4 7 4 7 7 6 6 6 5 8 5 5 5 7 5 6 5 6 8 9 5 8 9 7 8 5 6 8 6 6 9 7 7 8 6 8 8 7 9 8 9 6 8 9 8 9 8 6 7 6 8 8 9 7 8 5 5 7 6 5 6 9 5 7 9 6 9 9 6 9 6 7 6 7 7 4 5 4 7 5 8 7 4 5 5 6 4 5 5 7 7 4 6 7 6 3 3 6 3 2 4 3 4 3 6 3 3 6 6 )
#(1 2 6 4 6 3 6 4 5 4 4 3 3 4 6 6 3 7 4 6 7 6 4 6 3 7 3 5 4 7 5 5 7 5 4 7 6 6 8 5 8 5 6 9 5 5 6 5 6 8 9 7 7 6 6 6 7 9 7 9 9 6 9 7 7 6 6 9 9 6 8 7 7 7 7 8 7 9 6 8 9 6 9 9 7 7 9 7 8 8 5 7 5 9 9 6 8 6 6 6 5 4 4 8 4 4 4 5 6 8 4 5 8 4 8 8 6 7 4 3 4 5 3 7 3 3 6 3 5 4 6 2 2 2 4 3 2 5 4 5 2 )
#(4 2 2 6 2 5 6 5 6 2 4 2 3 4 5 3 5 7 5 4 7 7 7 3 5 7 7 5 8 6 5 4 8 7 8 4 7 4 4 8 5 5 8 6 7 9 5 5 7 7 5 9 9 5 9 5 5 7 6 8 7 8 7 8 9 8 9 8 8 8 9 6 7 6 7 9 7 8 8 7 7 6 9 9 5 7 6 5 7 5 6 8 8 6 8 7 7 6 6 7 5 4 8 6 4 5 6 7 7 4 5 7 4 5 6 3 5 6 4 5 3 4 3 7 3 6 7 6 5 2 6 3 6 4 6 2 5 4 4 5 3 )
#(5 6 5 3 2 5 4 6 3 4 3 6 4 2 4 7 6 6 3 4 4 3 3 7 4 6 4 3 5 7 8 4 7 6 6 8 4 6 7 4 6 6 7 8 8 8 5 8 7 6 5 9 7 6 6 6 7 9 6 5 9 8 8 8 9 6 7 6 8 9 6 7 8 9 8 7 7 7 5 9 5 7 9 8 7 5 9 9 8 6 7 9 5 9 8 5 8 6 5 8 5 4 5 6 4 5 6 8 8 8 5 6 5 8 7 4 5 5 7 4 5 4 6 6 5 5 7 6 3 2 2 4 4 2 4 6 4 4 2 2 6 )
#(3 1 3 6 4 3 4 6 6 2 6 4 3 2 5 7 3 6 7 4 7 3 3 7 3 5 5 6 6 7 7 5 4 4 6 4 4 6 6 4 7 6 8 8 5 7 6 8 7 7 5 6 6 8 6 9 9 8 6 9 9 6 6 8 5 8 6 6 7 5 7 5 6 7 9 9 7 6 5 9 5 8 8 5 6 6 7 7 9 8 6 5 5 7 8 9 5 8 7 6 8 7 8 7 8 8 4 5 6 5 7 4 6 8 6 3 7 3 7 4 5 4 7 5 3 3 5 5 4 6 6 3 4 2 6 6 3 4 4 3 2 )
#(5 4 4 2 5 2 4 3 6 6 6 3 4 3 4 3 4 6 4 3 6 6 4 5 6 5 5 5 5 4 7 5 8 7 6 8 7 4 5 4 8 7 7 8 6 6 5 5 8 9 9 7 6 5 9 8 9 7 5 7 9 7 5 6 5 6 6 8 9 6 5 5 9 8 6 5 6 8 9 6 9 7 7 5 7 5 5 8 9 5 5 9 6 6 5 6 8 5 8 5 5 7 7 4 6 8 6 7 5 6 4 8 5 4 3 7 6 6 6 3 5 5 4 5 7 6 3 3 5 3 6 3 5 2 4 5 3 6 3 2 5 )
#(5 5 6 6 6 3 3 4 2 4 4 6 4 2 2 6 5 3 3 4 5 6 6 6 7 7 5 6 4 5 4 7 7 6 5 7 7 7 6 8 4 6 7 5 4 5 9 6 9 6 5 5 6 7 5 5 9 6 5 7 5 8 8 6 5 5 5 7 7 9 9 7 5 7 5 9 9 5 5 7 5 9 9 9 9 7 5 7 6 7 9 9 5 5 7 7 8 6 6 5 5 5 4 8 5 8 7 7 7 8 4 5 7 4 7 4 6 4 7 7 6 7 6 4 3 5 7 5 5 4 3 6 2 4 6 2 4 3 3 5 5 )
#(2 5 5 4 4 5 4 3 2 3 5 5 5 3 5 5 5 4 5 6 3 4 3 6 4 6 6 7 3 5 4 8 6 6 8 6 4 7 8 6 5 6 7 6 7 6 7 8 9 5 6 6 6 7 8 5 9 6 5 5 9 8 6 8 8 6 5 8 7 7 8 8 6 9 6 9 6 8 5 7 8 5 6 6 5 6 9 8 7 5 8 5 8 5 9 8 4 7 5 7 5 8 6 6 8 7 8 4 6 7 6 6 6 3 7 5 3 3 6 3 7 4 4 4 3 6 7 3 5 3 4 5 5 4 3 2 3 6 3 3 1 )
#(5 1 5 2 2 3 6 3 5 4 3 5 3 2 2 4 3 3 4 7 7 3 6 3 4 4 7 5 4 4 4 7 7 8 5 4 5 8 6 4 8 5 4 8 8 8 8 6 7 7 8 8 7 7 9 9 8 7 8 8 7 9 7 6 7 6 7 7 5 7 7 7 9 6 5 6 7 5 6 7 6 5 8 9 8 9 7 6 9 7 8 9 8 8 7 4 6 6 4 6 7 5 8 7 8 5 8 8 8 5 8 6 5 5 4 3 3 4 3 3 3 4 7 3 7 3 2 3 2 2 5 2 4 3 3 2 5 6 5 6 2 )
#(2 4 3 2 4 6 3 4 6 2 5 2 2 3 4 5 3 5 5 5 7 5 6 7 7 6 5 6 3 3 6 5 8 8 7 4 8 4 4 5 5 8 6 5 6 4 8 7 6 4 6 5 8 7 8 6 5 7 8 5 5 7 6 6 5 6 7 5 5 8 9 9 5 6 5 9 7 8 5 6 6 6 7 9 5 6 6 8 6 7 6 5 9 6 8 7 5 8 8 4 6 7 5 5 4 5 7 8 7 7 5 3 6 6 5 6 4 4 3 7 3 6 6 7 5 4 5 2 4 3 6 5 4 5 4 2 5 5 3 2 3 )
#(3 2 2 2 3 5 4 5 3 3 3 6 5 3 5 6 2 4 3 3 7 3 5 3 6 5 3 5 7 7 5 5 4 6 4 6 4 4 5 5 4 6 5 5 6 7 7 5 7 5 8 6 9 7 6 7 6 5 7 7 8 9 8 7 8 7 8 8 8 7 9 7 7 7 7 5 7 8 6 5 5 9 6 9 9 9 9 9 5 5 7 7 6 7 5 5 4 7 5 7 4 4 7 4 8 5 8 5 7 6 3 6 4 4 3 4 3 7 4 6 6 4 7 5 3 6 3 6 2 3 2 6 5 6 4 3 5 2 5 1 2 )
#(4 1 2 4 4 2 2 5 3 6 3 4 5 2 3 5 2 2 2 5 4 4 4 3 3 6 3 7 3 4 3 6 4 3 5 5 7 6 6 7 5 6 8 8 5 8 4 4 8 5 6 5 7 6 8 6 5 7 5 6 6 5 7 8 9 6 5 5 6 6 7 7 8 7 8 9 5 7 6 8 9 5 7 5 8 8 8 7 6 6 6 6 6 8 7 5 5 8 6 5 4 8 4 8 4 4 4 4 5 6 7 7 3 4 3 3 5 3 7 3 5 5 3 7 4 3 4 2 3 4 6 4 2 4 4 4 6 4 1 3 2 )
#(3 4 2 3 4 5 4 2 6 5 5 6 3 5 6 6 2 3 4 4 6 7 7 3 6 5 3 4 6 4 5 7 4 4 3 5 4 5 7 7 7 7 7 4 5 4 4 8 5 5 8 7 8 5 7 9 8 5 6 7 8 8 6 6 8 7 5 9 9 5 9 5 9 5 6 6 8 5 5 9 7 7 6 5 8 5 7 8 7 5 8 4 7 7 8 6 8 4 5 4 6 4 4 7 4 4 7 6 7 5 3 7 3 3 7 7 3 3 5 7 4 7 4 4 2 5 5 5 2 5 6 5 5 4 5 5 2 6 3 5 3 )
#(1 5 1 1 2 4 4 5 5 6 5 3 5 6 6 4 4 6 2 5 6 4 3 3 6 3 3 6 7 4 3 7 3 7 7 3 7 5 5 7 6 8 5 7 4 5 4 8 8 7 7 5 4 6 6 4 7 7 9 6 9 7 8 5 8 6 7 5 5 6 9 8 9 5 6 8 9 8 9 9 9 9 9 8 8 6 5 4 8 5 6 4 8 8 6 5 5 8 6 6 8 8 7 4 8 8 8 6 6 5 3 6 6 5 5 3 3 7 4 3 5 5 4 2 5 6 4 5 4 6 4 4 4 5 6 2 4 5 5 2 5 )
#(5 4 2 3 2 3 3 6 3 5 5 3 2 3 3 6 3 6 3 3 2 5 3 6 3 4 3 4 5 4 6 3 5 3 3 7 7 7 6 4 7 8 5 8 7 4 5 8 7 7 4 7 5 6 7 7 6 8 4 9 9 8 7 9 5 6 6 8 7 7 8 8 6 8 5 8 9 7 9 5 7 9 7 8 5 8 8 7 8 4 6 6 8 7 8 5 7 5 7 8 7 4 4 8 4 7 5 4 4 6 7 6 5 5 5 6 3 4 7 5 5 7 4 5 4 2 6 2 6 3 4 6 2 6 2 5 6 3 4 1 2 )
#(2 1 4 4 2 4 2 3 4 6 4 4 5 6 4 3 6 3 3 3 5 3 6 3 5 5 4 7 6 4 5 4 6 4 6 5 5 3 7 8 6 6 8 5 5 6 4 6 4 8 5 4 6 4 6 7 4 7 6 6 5 4 5 8 5 5 7 9 9 8 5 5 9 9 5 6 8 8 6 6 6 5 8 8 6 4 4 8 5 4 5 8 4 8 4 8 4 6 4 4 7 5 7 4 8 4 5 6 3 3 6 4 4 7 5 4 5 6 6 5 4 5 2 4 4 6 5 6 3 2 6 2 2 5 5 3 5 2 4 2 5 )
#(1 5 4 3 1 4 3 6 6 6 6 5 5 6 5 6 4 2 5 2 5 2 3 3 6 4 5 5 3 5 3 3 7 6 7 4 3 6 7 7 8 8 6 6 4 8 4 7 5 6 6 4 4 6 4 8 4 6 8 8 8 5 8 6 5 5 5 7 5 5 7 5 8 6 6 5 7 4 5 6 6 6 5 6 6 6 5 5 4 7 4 7 8 5 5 8 4 7 6 8 5 5 7 6 6 6 6 3 3 5 7 3 4 4 7 4 5 7 6 5 7 2 2 4 3 2 5 5 3 3 6 6 3 3 4 6 5 4 4 1 5 )
#(1 4 5 1 3 2 3 5 5 5 5 4 6 5 4 4 4 2 4 4 2 3 2 7 7 4 6 6 7 3 3 6 7 7 6 3 4 7 4 7 7 6 5 5 7 8 8 5 5 4 7 5 7 7 7 6 4 5 8 6 7 5 6 6 6 6 6 7 5 6 5 5 4 4 6 6 4 8 8 4 6 7 6 6 7 5 5 5 7 8 7 5 4 6 5 6 6 8 5 6 6 5 8 7 4 4 5 7 3 7 3 4 3 4 5 4 6 3 3 7 2 5 6 4 2 6 4 4 5 6 6 2 3 3 3 5 3 1 2 1 2 )
#(1 1 5 5 5 5 5 5 6 2 2 6 4 4 3 4 6 5 4 3 4 6 6 4 3 5 7 3 6 4 7 6 6 3 3 6 3 7 3 5 5 6 6 6 7 8 4 8 8 8 7 4 7 6 7 8 4 8 7 7 4 6 4 8 5 8 7 6 5 4 6 5 5 5 6 7 8 4 4 8 8 8 7 8 5 6 7 6 4 5 6 5 6 8 5 5 7 4 7 4 8 8 3 4 3 7 4 5 3 3 3 4 3 5 5 5 6 5 5 3 5 6 6 4 2 6 6 6 2 6 5 3 5 3 5 3 4 2 2 2 5 )
#(5 4 4 4 5 4 1 2 2 5 2 4 3 3 4 4 4 2 4 4 2 3 2 4 4 5 5 7 5 4 4 3 3 5 5 3 5 7 6 6 3 3 6 8 8 4 6 4 6 8 8 4 8 8 4 6 6 5 7 8 4 8 7 7 8 6 7 8 5 8 4 8 7 8 6 5 8 6 7 6 8 4 7 4 7 4 8 7 6 6 5 7 4 8 7 5 8 7 8 7 5 3 7 5 5 5 6 3 6 3 5 4 3 5 5 5 5 3 6 5 6 6 5 6 6 6 5 4 4 3 2 6 5 6 1 5 5 1 3 5 3 )
#(3 1 3 4 5 4 3 5 1 3 2 2 5 4 3 5 2 4 2 4 4 5 6 6 6 6 6 4 5 5 4 6 3 5 3 7 6 4 6 6 5 6 6 6 7 8 7 4 4 7 8 6 7 6 6 5 4 6 6 5 6 4 5 4 5 7 4 4 7 7 7 8 8 8 6 8 6 7 8 5 4 4 5 8 5 8 7 5 8 7 8 4 8 8 6 7 8 8 6 4 6 3 7 6 6 5 7 6 4 5 6 5 6 4 6 4 6 7 2 3 4 4 4 6 3 5 6 2 2 4 6 4 4 2 2 5 2 3 2 5 5 )
#(3 2 1 2 4 3 1 5 4 2 6 2 6 3 4 3 6 4 4 3 5 4 5 6 2 5 5 4 6 6 6 6 6 3 5 4 7 5 6 3 5 5 7 5 3 5 7 8 8 6 4 7 4 5 7 4 5 4 6 6 6 7 8 4 7 6 5 8 6 8 5 5 7 7 5 4 8 4 5 6 6 7 8 5 4 4 8 7 8 7 7 6 4 8 7 8 8 6 3 4 3 6 7 7 5 4 7 5 3 4 7 5 6 6 5 6 5 3 2 4 2 5 2 5 6 5 6 2 2 2 6 4 6 3 5 3 3 1 4 5 5 )
#(5 3 3 4 2 2 4 2 2 4 5 4 3 4 5 2 5 6 6 6 5 4 3 3 3 4 2 5 3 5 3 4 3 6 3 7 6 5 7 7 5 5 6 7 6 4 6 5 7 4 7 8 5 5 8 7 6 7 6 6 4 7 5 8 8 6 5 6 7 6 8 8 6 4 8 8 5 6 6 8 4 6 7 4 6 8 4 4 8 7 4 8 4 7 8 4 4 4 3 6 5 6 3 7 3 4 6 5 3 6 6 6 5 4 3 5 2 5 5 3 5 5 6 2 4 4 2 5 3 5 6 2 3 2 5 2 5 5 1 4 2 )
#(5 3 2 4 3 1 4 5 3 2 2 4 5 5 5 3 6 5 3 6 4 5 2 5 5 3 5 4 4 5 5 3 5 6 7 5 4 5 5 3 3 7 7 5 7 7 3 6 5 5 4 4 7 5 8 5 6 6 8 7 4 6 4 6 4 4 4 5 6 8 4 8 7 7 8 8 7 7 4 4 8 8 8 4 5 6 8 7 8 6 6 6 5 6 3 4 7 4 5 5 4 5 5 4 7 5 6 6 5 6 4 7 7 3 3 3 4 2 3 6 6 2 6 2 4 3 4 5 6 4 3 2 1 1 5 3 4 2 2 4 2 )
#(4 4 4 3 3 2 2 1 4 2 2 4 2 5 5 3 2 3 5 6 5 3 4 5 4 2 2 3 3 6 3 7 6 3 4 6 5 6 6 5 4 5 3 3 7 5 3 4 6 5 3 5 5 8 5 8 5 7 7 6 8 8 4 4 6 7 6 7 8 5 7 6 6 7 6 6 8 8 4 8 5 6 8 7 5 8 5 6 4 4 5 4 5 3 6 4 5 7 4 5 4 6 4 3 4 3 5 7 4 6 6 7 5 5 5 5 3 6 4 2 5 3 4 6 6 2 6 6 6 4 5 4 1 1 2 1 5 2 3 4 3 )
#(4 1 2 1 3 4 3 2 2 3 5 1 1 4 3 6 4 3 4 4 5 5 2 4 2 2 5 2 5 4 5 3 4 5 3 5 3 3 7 4 6 3 3 5 3 7 3 6 6 5 7 6 3 7 6 7 4 7 5 8 5 8 5 8 4 5 4 7 4 7 6 6 8 8 8 6 6 6 8 7 7 6 6 7 8 6 7 5 5 6 4 3 4 7 4 4 4 4 5 5 4 6 3 3 5 3 5 3 5 3 6 7 4 2 6 5 4 6 3 3 4 4 5 6 4 6 5 5 5 4 5 2 5 2 2 3 5 1 1 1 5 )
#(4 5 5 3 1 2 5 5 1 3 2 3 1 5 3 4 6 4 4 6 3 5 2 4 2 3 6 5 6 4 3 3 6 7 6 7 4 7 4 3 6 6 7 4 6 6 3 4 3 3 5 3 6 3 3 6 8 6 8 4 7 5 4 6 6 4 8 5 4 8 8 8 4 6 5 5 6 6 7 8 5 4 6 8 7 5 4 6 3 7 3 3 4 7 5 5 3 6 5 7 7 6 3 4 4 5 7 4 3 3 7 4 6 3 2 3 2 6 6 6 4 5 4 5 6 2 4 3 5 1 4 3 1 5 1 4 1 4 3 3 2 )
#(2 1 4 3 2 4 4 2 2 3 1 5 2 5 5 6 6 2 6 5 5 5 3 4 3 2 5 6 4 3 3 3 2 6 5 5 3 7 7 5 4 5 7 6 6 4 4 4 4 5 3 6 5 4 5 4 4 3 3 3 6 7 5 5 4 8 4 4 8 6 5 7 7 8 8 8 6 6 7 5 4 7 6 5 7 5 6 7 3 3 3 3 4 7 5 7 6 3 3 3 6 3 3 5 5 6 7 5 4 6 4 2 3 3 2 6 2 5 6 4 2 3 4 5 3 5 5 6 1 5 2 4 3 4 2 5 2 5 3 3 5 )
#(1 2 5 4 1 3 1 3 3 5 3 3 3 4 5 5 3 3 4 5 3 6 4 3 3 2 3 3 5 3 2 6 3 3 7 3 3 5 3 6 3 5 4 3 6 4 7 6 7 5 6 7 6 3 7 5 5 4 7 3 7 4 4 6 7 8 5 8 8 7 6 4 7 4 4 6 5 6 3 5 4 3 6 7 7 4 7 7 5 4 5 5 3 4 7 3 6 6 5 5 5 3 6 5 6 4 3 4 6 6 2 4 2 2 6 3 5 2 5 3 5 6 2 5 4 6 3 2 4 5 2 2 3 4 5 1 2 1 4 1 3 )
#(3 5 1 3 4 5 3 1 2 5 5 5 1 3 5 5 5 2 3 6 4 3 4 2 6 6 6 6 5 5 3 4 4 4 2 6 5 7 7 7 6 7 6 5 4 6 5 5 6 3 5 6 3 5 7 3 5 3 5 5 4 6 4 6 5 5 3 3 4 7 4 3 3 6 4 7 4 5 3 3 3 4 3 5 6 3 4 7 5 6 3 6 5 6 7 3 3 6 6 3 4 5 3 3 4 5 7 5 2 5 6 6 5 4 3 3 4 2 2 2 3 5 5 5 5 5 1 2 2 1 3 3 5 3 2 1 3 4 3 5 2 )
#(1 1 3 1 3 3 5 3 3 3 4 2 2 3 4 4 5 5 4 3 5 4 4 6 2 2 4 4 4 3 5 4 3 2 3 4 5 4 4 5 3 5 6 3 5 6 4 3 7 7 5 4 3 6 4 3 3 4 7 3 3 3 5 3 6 5 3 5 5 6 6 4 7 6 4 6 7 6 7 6 7 4 4 6 6 5 5 5 5 7 4 3 6 4 5 7 6 6 4 3 4 6 4 4 6 3 6 4 4 6 3 6 4 5 3 6 6 5 6 3 6 6 2 2 2 5 3 1 3 1 2 3 4 3 5 2 5 1 2 4 3 )
#(1 4 2 3 2 3 1 1 3 1 2 2 4 3 3 4 2 5 2 2 2 4 3 2 3 4 4 5 2 2 3 5 4 2 4 3 5 3 5 7 7 7 5 6 3 4 6 7 7 6 3 3 3 4 7 7 7 3 3 6 3 5 4 3 7 5 6 4 6 4 7 6 3 3 5 7 4 5 4 4 4 6 7 4 7 5 5 7 6 4 3 6 3 3 7 3 5 7 4 7 3 5 5 7 7 4 5 6 3 5 2 5 5 3 5 5 2 6 3 3 4 5 4 6 2 3 1 5 1 2 1 1 1 1 2 4 2 2 5 5 5 )
#(3 1 3 3 3 4 5 4 3 5 5 3 1 5 2 3 4 2 5 1 3 3 5 2 3 4 6 5 2 3 3 2 6 4 6 3 5 6 4 6 5 6 5 5 7 6 5 3 7 3 6 5 3 3 4 3 4 7 7 7 4 7 5 5 7 4 4 3 5 4 3 3 6 3 7 6 4 3 7 3 3 6 4 3 6 5 3 5 4 3 7 4 4 5 4 7 6 3 4 4 7 6 6 5 5 6 4 2 6 4 3 4 2 6 3 5 3 3 6 5 5 2 6 4 4 1 2 5 3 2 1 1 5 1 4 4 2 1 1 4 4 )
#(4 4 2 1 2 3 4 5 3 5 1 3 2 1 5 1 2 3 1 2 1 5 5 2 3 6 4 5 4 3 3 5 5 6 4 2 3 2 3 3 5 7 5 6 6 7 4 7 5 6 4 6 4 6 3 4 3 5 4 6 5 7 5 3 5 6 6 3 4 5 6 3 6 3 5 7 3 5 6 7 6 3 3 3 7 4 4 7 3 7 3 7 4 5 7 7 7 4 7 3 7 6 2 4 3 5 2 4 5 2 4 2 4 4 4 2 4 5 3 2 3 6 1 2 1 2 3 4 2 5 1 3 2 4 3 1 4 4 4 4 2 )
#(4 4 3 3 2 4 5 4 5 5 5 4 4 5 4 3 1 5 3 2 5 5 5 6 4 6 6 3 6 3 6 2 4 2 4 2 6 4 5 4 5 6 5 5 4 6 3 7 3 6 6 6 3 3 7 7 6 4 5 4 5 3 5 5 4 5 7 4 6 3 4 6 6 3 3 3 7 5 6 4 3 6 4 4 6 3 7 3 3 4 7 6 5 4 5 4 7 3 6 4 2 3 6 5 3 2 6 4 4 4 6 3 5 2 4 6 5 5 4 5 3 1 5 3 1 1 2 3 4 5 5 5 1 4 1 4 4 4 2 3 1 )
#(2 4 3 1 1 4 3 5 5 3 3 4 4 5 5 3 1 3 5 2 1 3 1 5 4 3 4 3 6 4 6 2 3 3 3 2 2 5 2 4 6 2 6 5 5 5 4 5 6 4 5 7 6 6 5 7 6 7 4 6 3 4 7 4 4 4 5 3 6 5 7 6 5 6 4 7 3 3 4 5 7 6 3 3 4 7 3 6 6 4 5 6 5 7 7 7 7 7 5 3 2 2 2 5 2 5 2 2 3 2 5 4 4 5 2 4 2 5 6 2 1 5 5 1 2 5 3 5 1 4 3 5 1 3 3 5 3 4 2 3 1 )
#(2 4 1 2 2 1 2 4 2 1 2 3 5 3 5 2 4 4 2 2 1 2 3 1 2 3 5 5 6 3 5 4 6 2 6 3 3 2 3 4 5 6 4 6 6 6 5 2 4 4 5 7 3 6 4 5 5 6 7 7 7 5 7 7 7 7 3 4 6 4 3 4 7 6 7 4 4 3 3 5 7 4 4 7 7 6 6 3 4 4 5 7 5 4 7 2 5 2 2 6 2 4 4 6 2 4 4 2 4 5 3 5 3 5 3 3 4 5 6 2 2 5 4 2 5 5 4 3 3 3 4 1 2 4 5 1 2 2 1 4 3 )
#(3 2 4 3 3 4 2 1 2 5 2 2 4 5 4 3 5 1 2 5 3 4 4 5 4 6 3 3 3 5 2 6 3 3 6 2 4 6 2 2 5 3 4 4 2 3 3 2 5 4 6 4 7 5 7 7 4 5 6 4 4 3 5 6 5 3 7 4 3 3 6 6 3 4 7 4 4 6 6 3 6 5 5 4 3 7 6 3 7 5 3 7 7 6 4 4 2 3 4 5 4 6 6 3 5 3 3 4 4 4 6 6 6 3 3 4 4 3 4 2 1 4 4 3 1 3 5 1 5 1 4 5 5 5 1 5 1 3 3 1 2 )
#(1 1 4 1 4 2 3 4 5 4 5 2 4 4 2 5 2 3 5 3 4 5 4 2 4 5 4 5 4 2 5 5 6 4 5 6 3 3 6 4 6 3 5 3 5 4 5 2 5 3 2 3 5 4 7 6 6 5 5 4 4 7 6 6 4 6 7 7 4 4 7 4 5 7 6 3 7 7 3 3 4 7 4 7 5 3 7 5 6 7 6 5 2 6 6 2 6 6 3 4 2 2 6 2 4 2 3 6 6 4 3 2 6 2 5 3 5 5 4 3 4 4 1 4 2 4 4 3 4 3 2 3 5 1 1 1 2 3 1 1 3 )
#(4 4 4 2 1 2 4 1 1 1 4 3 3 5 5 5 4 4 4 5 2 5 3 4 1 4 5 4 2 5 6 2 5 3 3 2 3 4 5 5 6 3 6 5 3 2 3 3 5 4 3 6 4 6 6 4 6 6 7 4 4 3 7 6 3 3 4 4 7 6 6 7 3 3 7 7 5 3 7 7 7 3 6 6 6 7 6 5 2 2 3 2 6 6 4 4 4 3 4 2 5 6 5 6 5 5 5 6 2 2 4 3 2 6 4 5 4 4 4 3 5 1 4 5 2 5 4 2 4 2 2 3 2 1 2 1 1 2 1 3 3 )
#(1 3 1 1 3 1 3 1 4 1 3 4 4 3 2 3 5 5 3 5 4 4 1 4 4 4 1 3 5 2 4 2 6 2 5 5 6 3 2 5 5 3 5 3 2 3 2 4 4 6 4 6 5 5 5 6 3 4 6 4 3 5 5 4 3 4 4 5 6 4 7 3 4 3 3 5 6 3 7 4 6 3 2 2 4 6 4 2 3 4 2 4 6 5 6 5 4 2 3 6 3 3 2 2 5 3 5 5 5 6 5 5 5 4 4 5 4 3 5 4 4 3 3 1 1 3 5 5 2 2 2 3 4 4 3 1 2 1 3 1 3 )
#(3 3 3 3 1 3 4 1 1 4 4 4 2 5 5 1 5 5 4 3 2 1 1 2 5 1 2 4 1 5 5 4 3 6 2 6 5 6 6 4 6 5 6 2 5 4 6 3 5 5 3 2 3 4 2 3 4 6 3 2 5 4 6 2 2 3 2 6 5 2 2 5 4 6 6 5 3 5 5 3 4 6 2 4 4 5 4 5 4 5 5 2 3 4 3 6 2 2 4 2 3 2 3 2 5 4 3 3 2 2 4 6 3 3 2 3 4 5 4 2 5 3 4 4 3 4 1 2 3 2 5 2 2 2 4 3 3 2 2 2 4 )
#(4 2 4 4 4 4 4 1 4 4 4 3 1 3 5 4 4 1 5 4 3 2 1 4 1 4 5 4 2 4 1 4 5 3 6 5 6 6 5 6 6 3 3 6 5 3 4 5 2 5 3 6 5 2 6 3 2 4 3 4 4 2 2 3 4 4 5 4 5 3 6 3 3 5 5 3 6 2 5 2 5 4 3 6 3 5 2 5 2 2 5 4 6 4 3 3 3 2 4 3 5 4 3 2 3 3 5 5 3 3 6 3 1 4 4 4 1 3 2 3 5 1 4 4 5 3 5 2 2 1 4 3 4 4 4 1 2 4 1 1 2 )
#(4 1 1 3 4 1 1 2 3 4 3 1 4 1 2 5 1 1 5 1 4 1 1 3 5 5 1 3 4 5 2 3 2 3 2 4 4 6 4 3 2 6 4 4 2 5 4 3 3 3 5 2 2 4 2 2 5 4 3 6 2 3 3 5 6 3 5 2 4 4 3 3 4 5 2 3 6 5 5 4 4 6 6 5 4 2 6 4 6 3 5 2 6 2 5 3 2 2 2 6 5 3 5 5 2 6 6 6 3 4 1 4 1 4 3 3 3 5 5 5 3 3 2 4 4 5 4 1 5 3 4 4 3 2 1 3 3 4 2 3 2 )
#(2 4 2 2 4 4 2 1 3 2 4 1 3 2 4 3 4 1 5 5 5 3 3 1 2 1 2 3 5 5 4 4 1 4 3 2 2 3 5 5 6 6 6 6 5 5 4 4 2 2 5 4 2 4 4 6 4 3 6 2 4 6 4 5 5 5 6 2 2 4 4 2 3 3 2 6 5 3 2 5 2 5 4 6 4 2 5 6 6 2 3 5 6 4 4 5 5 6 3 4 6 6 6 4 2 3 4 2 5 2 4 1 4 4 4 4 2 2 2 3 4 5 1 1 4 1 3 4 3 4 1 2 4 1 4 2 4 4 4 4 4 )
#(4 1 3 2 3 4 1 1 1 3 4 1 3 1 2 3 5 2 5 3 1 3 1 3 5 1 1 1 2 2 1 3 3 2 1 1 5 1 4 5 4 3 5 4 3 6 3 5 6 3 3 6 2 2 2 2 3 6 5 3 5 5 6 4 6 2 5 3 2 5 2 2 6 2 5 3 2 3 6 4 6 2 5 4 2 5 3 4 5 2 2 5 3 4 3 6 5 4 6 2 6 6 3 2 2 5 4 5 5 3 1 2 1 3 4 4 2 3 3 4 2 1 4 5 4 1 5 4 1 2 1 2 1 3 2 4 1 3 3 1 3 )
#(4 2 2 1 2 2 3 3 3 1 2 4 1 4 4 4 1 4 5 4 5 1 5 1 4 3 5 2 2 3 5 5 3 3 5 5 1 1 2 1 4 2 6 5 2 5 6 3 4 2 6 2 4 3 3 5 4 5 2 6 5 2 2 5 6 5 3 4 3 3 4 3 6 6 3 3 4 3 2 5 3 4 5 4 6 3 3 4 3 4 5 5 4 3 2 4 5 2 4 6 2 6 5 4 1 1 3 5 4 1 4 3 2 4 1 4 1 5 2 4 1 4 4 1 3 2 4 4 2 3 4 4 2 1 2 4 3 4 1 3 2 )
#(2 2 4 2 2 4 1 3 1 2 3 3 3 4 3 1 4 1 5 2 5 3 3 2 3 1 2 4 5 4 3 1 1 4 4 2 2 4 5 1 5 1 3 6 5 3 5 3 4 3 2 4 2 5 4 3 5 2 6 6 3 5 3 3 4 6 2 3 6 6 2 4 5 5 3 3 6 5 3 6 2 2 2 3 5 5 4 3 5 5 6 2 6 5 5 5 2 3 6 2 5 5 4 1 2 4 3 1 2 4 4 1 2 4 5 3 2 2 3 3 4 5 5 4 5 3 4 3 4 2 2 4 2 1 3 1 1 4 1 1 1 )
#(2 4 3 3 1 3 1 1 1 2 4 3 3 3 2 2 3 4 4 2 5 3 1 4 1 2 1 5 4 3 3 2 5 5 2 1 4 2 2 4 2 4 5 4 3 3 5 3 6 4 3 6 4 2 3 4 3 2 3 6 5 2 3 6 2 5 4 3 5 5 2 5 3 5 2 2 3 2 5 6 4 6 4 5 6 5 2 4 4 5 4 5 2 3 6 4 2 5 6 3 4 5 2 4 4 4 1 2 2 2 2 5 3 5 1 3 2 5 4 1 5 5 5 5 3 4 1 1 1 3 3 1 1 4 1 4 4 4 4 1 2 )
))

;; 1 1 based = pad *vec* out so do not need to subtract on each xy 

;; for now we stick with 0 0 based approach 
(define (xy x y)
  (vector-ref (vector-ref *vec* y) x))

(define (vec-height v)
  (vector-length v))

(define (vec-width v)
  (vector-length (vector-ref v 0)))

(define *height* (vec-height *vec*))
(define *width* (vec-width *vec*))

(define (onboard? x y)
  (and (>= x 0) (< x *width*)
       (>= y 0) (< y *height*)))

(define (next-state state)
  (match state
    ((x y score m1 m2 m3)
     (cond
      ((not (onboard? x y)) #f)
      (#t (next-state2 x y score m1 m2 m3))))))

(define (next-state2 x y score m1 m2 m3)
  (cond
   ((eq? m1 'left) (next-state-left x y score m1 m2 m3))
   ((eq? m1 'right) (next-state-right x y score m1 m2 m3))
   ((eq? m1 'up) (next-state-up x y score m1 m2 m3))
   ((eq? m1 'down) (next-state-down x y score m1 m2 m3))
   (#t (error 'next-state2))))



;; ;; 

;; ;; lookup score at x y
;; (define (score-xy x y)
;;   (vector-ref (vector-ref *score* y) x))

;; ;; change score at x y
;; (define (score-xy! x y z)
;;   (vector-set! (vector-ref *score* y) x z))

;; (define (copy-vec v)
;;   (let ((height (vec-height v))
;; 	(width (vec-width v)))
;;     (let ((v2 (make-vector height #f)))
;;       (letrec ((foo (lambda (n m)
;; 		      (cond
;; 		       ((>= n m) v2)
;; 		       (#t (vector-set! v2 n (make-vector width #f))
;; 			   (foo (+ n 1) m))))))
;; 	(foo 0 height)))))
;; ;; -----------------------------

(define *closed* #f)
(define *pending* #f)
(define *open* #f)
(define *score* #f)

(define *trigger* #f)

;; lookup score on score-xy
(define (keep? x y score m1 m2 m3)
  (let ((known (score-xy x y)))
    ;; when no entries at x y - store an empty vector
    (when (not known)    ;; no entries at all      
      (let ((v (make-vector 37 #f)))
	(score-xy! x y v)
	(set! known v)))
    
    ;; known should be a vector
    (let ((index (enum-i m1 m2 m3)))
	;; (cond
	;;  ((eq? m1 'left) (set! index 0))
	;;  ((eq? m1 'right) (set! index 1))
	;;  ((eq? m1 'up) (set! index 2))
	;;  ((eq? m1 'down) (set! index 3))
      ;;  (#t (error "keep dir unknown")))

      ;; index 36 reserved for non - matches 
      (when (= index -1)
	(set! index 36))
      
	;; look up best score for entering this square from one of the directions
	(let ((vs (vector-ref known index)))
	  (cond
	   ((not vs)
	    (vector-set! known index (list score m1 m2 m3))
	    (set! *trigger* #t)
	    (format #t "new best for : square ~a ~a : score ~a : m1,2,3 = ~a ~a ~a ~%"
			 x y score m1 m2 m3))
	   (#t ;; have a score here already
	    (match vs
	      ((_score _m1 _m2 _m3)
	       (cond
		((< score _score)
		 (vector-set! known index (list score m1 m2 m3))
		 (set! *trigger* #t)		 
		 (format #t "keep beaten by same entrie ~a ~a : score ~a : m1,2,3 = ~a ~a ~a ~%"
			 x y score m1 m2 m3))))))))))
  
  ;; never store as a list append
  #f)




(define (next-states states)
  (apply append (map next-state states)))

;; next state left : 
;; carry on going left
;; turn right go up
;; turn left go down
;; history of moves 
(define (next-state-left x y score m1 m2 m3)
  ;; left
  (let ((res '()))
    (cond
     ((and (eq? m1 'left) (eq? m2 'left) (eq? m3 'left)) #f)
     (#t
    (let* ((x2 (- x 1))(y2 y))
      (when (onboard? x2 y2)
	(let* ((score2 (+ score (xy x2 y2)))
	       (tmp (list x2 y2 score2 'left m1 m2)))
	  (when (apply keep? tmp)
	    (set! res (cons tmp res))))))))
    ;; down
  (let* ((x2 x)(y2 (+ y 1)))
    ;;(format #t "nsr y2 bug : ~a ~%" y2)
    (when (onboard? x2 y2)
      (let* ((score2 (+ score (xy x2 y2)))
	     (tmp (list x2 y2 score2 'down m1 m2)))
	  (when (apply keep? tmp)
	    (set! res (cons tmp res))))))

    ;; up
  (let* ((x2 x)(y2 (- y 1)))
    ;;(format #t "nsr y2 bug : ~a ~%" y2)
    (when (onboard? x2 y2)
      (let* ((score2 (+ score (xy x2 y2)))
	     (tmp (list x2 y2 score2 'up m1 m2)))
	(when (apply keep? tmp)
	  (set! res (cons tmp res))))))
  res))

;; next state up : 
;; carry on going up
;; turn left go left
;; turn right go right
(define (next-state-up x y score m1 m2 m3)
  (let ((res '()))
    ;; check go up
    (cond
     ((and (eq? m1 'up) (eq? m2 'up) (eq? m3 'up)) #f)
     (#t
      (let* ((x2 x)(y2 (- y 1)))
	(when (onboard? x2 y2)
	  (let* ((score2 (+ score (xy x2 y2)))
		 (tmp (list x2 y2 score2 'up m1 m2)))
	    (when (apply keep? tmp)
	    (set! res (cons tmp res))))))))
	    
   ;; left
    (let* ((x2 (- x 1))(y2 y))
      (when (onboard? x2 y2)
	(let* ((score2 (+ score (xy x2 y2)))
	       (tmp (list x2 y2 score2 'left m1 m2)))
	  (when (apply keep? tmp)
	  (set! res (cons tmp res))))))
    
   ;; right
    (let* ((x2 (+ x 1))(y2 y))
      (when (onboard? x2 y2)
	(let* ((score2 (+ score (xy x2 y2)))
	       (tmp (list x2 y2 score2 'right m1 m2)))
	  (when (apply keep? tmp)
	  (set! res (cons tmp res))))))
    res))


;; next state down : 
;; carry on going down
;; turn left go right
;; turn right go left
(define (next-state-down x y score m1 m2 m3)
  (let ((res '()))
    ;; check go down
    (cond
     ((and (eq? m1 'down) (eq? m2 'down) (eq? m3 'down)) #f)
     (#t
      (let* ((x2 x)(y2 (+ y 1)))
	(when (onboard? x2 y2)
	  (let* ((score2 (+ score (xy x2 y2)))
		 (tmp (list x2 y2 score2 'down m1 m2)))
	    (when (apply keep? tmp)
	    (set! res (cons tmp res))))))))
   ;; left
    (let* ((x2 (- x 1))(y2 y))
      (when (onboard? x2 y2)
	(let* ((score2 (+ score (xy x2 y2)))
	       (tmp (list x2 y2 score2 'left m1 m2)))
	  (when (apply keep? tmp)
	  (set! res (cons tmp res))))))
	  ;; right
    (let* ((x2 (+ x 1))(y2 y))
      (when (onboard? x2 y2)
	(let* ((score2 (+ score (xy x2 y2)))
	       (tmp (list x2 y2 score2 'right m1 m2)))
	  (when (apply keep? tmp)
	    (set! res (cons tmp res))))))
    res))



;; next state right : 
;; carry on going right
;; turn right go down
;; turn left go up
(define (next-state-right x y score m1 m2 m3)
  (let ((res '()))
  ;; check go right
  (cond
   ((and (eq? m1 'right) (eq? m2 'right) (eq? m3 'right)) #f)
   (#t
    (let* ((x2 (+ x 1))(y2 y))
      (when (onboard? x2 y2)
	(let* ((score2 (+ score (xy x2 y2)))
	       (tmp (list x2 y2 score2 'right m1 m2)))
	  (when (apply keep? tmp)
	  (set! res (cons tmp res))))))))
  ;; down
  (let* ((x2 x)(y2 (+ y 1)))
    (when (onboard? x2 y2)
      (let* ((score2 (+ score (xy x2 y2)))
	     (tmp (list x2 y2 score2 'down m1 m2)))
	(when (apply keep? tmp)
	(set! res (cons tmp res))))))
  ;; up
  (let* ((x2 x)(y2 (- y 1)))
    (when (onboard? x2 y2)
      (let* ((score2 (+ score (xy x2 y2)))
	     (tmp (list x2 y2 score2 'up m1 m2)))
	(when (apply keep? tmp)
	  (set! res (cons tmp res))))))
  res))

(define *max-qx* 0)
(define *max-qy* 0)


#|


|#

#|
(define (solve-runner)
  (do-while (not (null? *pending*))
	    (do-list (p *pending*)
		     (let ((possible (next-state p)))
		       (do-list (q possible)
				(let ((qx (first q))
				      (qy (second q))
				      (qs (third q)))
				  
				  ;; (qx,qy) qs score 
				  (let ((ts (score-xy qx qy)))
				    (cond
				     ((not ts) (score-xy! qx qy qs))
				     ((< qs ts) (score-xy! qx qy qs))))
				     			     
				  
				  ;; alert if ever reach lower corner
				  (when (> qx *max-qx*)
				    (format #t "max-qx ~a : max-qy ~a ~%" *max-qx* *max-qy*)
				    (set! *max-qx* qx))
				  (when (> qy *max-qy*)
				    (format #t "max-qx ~a : max-qy ~a ~%" *max-qx* *max-qy*)
				    (set! *max-qy* qy))
				  
				  (when (and (= qx *width*) (= qy *height*))
				    (format #t "reached lower corner : ~a ~%" q))
				  
				  ;; (cond
				  ;;  ((member (list qx qy) *closed*) #f) ;; too slow?
				  ;;  (#t
				  ;;   (set! *open* (cons q *open*))))
				  
				  (set! *open* (cons q *open*))
				  ))) ;; possible next states
		       ;; put p into closed
		       (set! *closed* (cons p *closed*)))
	    ;; swap open with pending
	    (set! *pending* *open*)
	    (set! *open* '())))
|#

;; each iteration of scan over score board may make an update to score board
;; this will set *trigger* #t
;; cycle will repeat
;; no triggers then loop finishes
(define (solve-runner)
  (set! *trigger* #t)
  (do-while *trigger*
	    (set! *trigger* #f)
	    (do-for x (0 *width* 1)
		    (do-for y (0 *height* 1)
			    (cond
			     ((and (= x 0)(= y 0)) #f) ;; ignore 0 0 for now
			     (#t (let ((known (score-xy x y)))
				   (cond
				    ((not known) #f) ;; nothing to improve
				    (#t ;; call next-state2 on this square
				     (do-for i (0 37 1) ;; cover 37 indices ... 0 to 36 inclusive
					     (let ((xs (vector-ref known i)))
					       (cond
						((not xs) #f)
						(#t (apply next-state2 (append (list x y)
									       xs)))))))))))))
	    ))
  



(define (solve)
  (set! *score* (copy-vec *vec*))
  (set! *max-qx* 0)
  (set! *max-qy* 0)

  ;; prime *score* table with 2 squares
  ;;(keep? 0 0 0 #f #f #f) ;; ?? 
  (keep? 1 0 (xy 1 0) 'right #f #f)
  (keep? 0 1 (xy 0 1) 'down #f #f)

  ;; by virtue rules not allowed to go back against direction travel , can not reach 0 0 square
  
  ;; (set! *closed* '((0 0)))
  ;; (set! *open* '())  
  ;; (set! *pending*  (list (list 1 0 (xy 1 0) 'right #f #f)
  ;; 			 (list 0 1 (xy 0 1) 'down #f #f)))
  
  (solve-runner)

  (pp *score*)
  (format #t "~%~% entering repl ~%")
  (repl))




(define (enum-i m1 m2 m3)
  (let ((choices '(left right up down))
	(id 0))
    (call/cc (lambda (exit)
	       (do-list (a choices)
			(do-list (b choices)
				 (cond
				  ((and (eq? a 'right) (eq? b 'left)) #f)
				  ((and (eq? a 'up) (eq? b 'down)) #f)
				  ((and (eq? a 'left) (eq? b 'right)) #f)
				  ((and (eq? a 'down) (eq? b 'up)) #f)
				  (#t 
				   (do-list (c choices)
					    (cond
					     ((and (eq? b 'right) (eq? c 'left)) #f)
					     ((and (eq? b 'up) (eq? c 'down)) #f)
					     ((and (eq? b 'left) (eq? c 'right)) #f)
					     ((and (eq? b 'down) (eq? c 'up)) #f)
					     (#t
					      ;; if find a match - 
					      (cond
					       ((and (eq? a m1)(eq? b m2)(eq? c m3))
						(exit id)))
					      (set! id (+ id 1)))))))))
	       -1))))



#|

. A
B

closed - meaning no point visiting this square
working - working set
open - where generated states kept that got kept

|#

(solve)


#|
a can be left right up down
|#

(define (enum)
  (let ((choices '(left right up down))
	(id 0))
    (do-list (a choices)
	     (do-list (b choices)
		      (cond
		       ((and (eq? a 'right) (eq? b 'left)) #f)
		       ((and (eq? a 'up) (eq? b 'down)) #f)
		       ((and (eq? a 'left) (eq? b 'right)) #f)
		       ((and (eq? a 'down) (eq? b 'up)) #f)
		       (#t 
			(do-list (c choices)
				 (cond
				 ((and (eq? b 'right) (eq? c 'left)) #f)
				 ((and (eq? b 'up) (eq? c 'down)) #f)
				 ((and (eq? b 'left) (eq? c 'right)) #f)
				 ((and (eq? b 'down) (eq? c 'up)) #f)
				 (#t 				 
				  (format #t "~a ~a ~a : ~a ~%" a b c id)
				  (set! id (+ id 1)))))))))))


(define (recover)
  (call-with-output-file "rescue"
    (lambda (port)
      (format port "~a~%" *score*)
      (flush-output port))))



















